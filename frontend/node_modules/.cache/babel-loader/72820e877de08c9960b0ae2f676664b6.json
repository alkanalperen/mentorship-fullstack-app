{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateCode;\n\nfunction _convertSourceMap() {\n  const data = _interopRequireDefault(require(\"convert-source-map\"));\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = _interopRequireDefault(require(\"@babel/generator\"));\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _mergeMap = _interopRequireDefault(require(\"./merge-map\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction generateCode(pluginPasses, file) {\n  const {\n    opts,\n    ast,\n    code,\n    inputMap\n  } = file;\n  const results = [];\n\n  for (const plugins of pluginPasses) {\n    for (const plugin of plugins) {\n      const {\n        generatorOverride\n      } = plugin;\n\n      if (generatorOverride) {\n        const result = generatorOverride(ast, opts.generatorOpts, code, _generator().default);\n        if (result !== undefined) results.push(result);\n      }\n    }\n  }\n\n  let result;\n\n  if (results.length === 0) {\n    result = (0, _generator().default)(ast, opts.generatorOpts, code);\n  } else if (results.length === 1) {\n    result = results[0];\n\n    if (typeof result.then === \"function\") {\n      throw new Error(`You appear to be using an async codegen plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version.`);\n    }\n  } else {\n    throw new Error(\"More than one plugin attempted to override codegen.\");\n  }\n\n  let {\n    code: outputCode,\n    map: outputMap\n  } = result;\n\n  if (outputMap && inputMap) {\n    outputMap = (0, _mergeMap.default)(inputMap.toObject(), outputMap);\n  }\n\n  if (opts.sourceMaps === \"inline\" || opts.sourceMaps === \"both\") {\n    outputCode += \"\\n\" + _convertSourceMap().default.fromObject(outputMap).toComment();\n  }\n\n  if (opts.sourceMaps === \"inline\") {\n    outputMap = null;\n  }\n\n  return {\n    outputCode,\n    outputMap\n  };\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/transformation/file/generate.js"],"names":["Object","defineProperty","exports","value","default","generateCode","_convertSourceMap","data","_interopRequireDefault","require","_generator","_mergeMap","obj","__esModule","pluginPasses","file","opts","ast","code","inputMap","results","plugins","plugin","generatorOverride","result","generatorOpts","undefined","push","length","then","Error","outputCode","map","outputMap","toObject","sourceMaps","fromObject","toComment"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateCode;\n\nfunction _convertSourceMap() {\n  const data = _interopRequireDefault(require(\"convert-source-map\"));\n\n  _convertSourceMap = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = _interopRequireDefault(require(\"@babel/generator\"));\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _mergeMap = _interopRequireDefault(require(\"./merge-map\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction generateCode(pluginPasses, file) {\n  const {\n    opts,\n    ast,\n    code,\n    inputMap\n  } = file;\n  const results = [];\n\n  for (const plugins of pluginPasses) {\n    for (const plugin of plugins) {\n      const {\n        generatorOverride\n      } = plugin;\n\n      if (generatorOverride) {\n        const result = generatorOverride(ast, opts.generatorOpts, code, _generator().default);\n        if (result !== undefined) results.push(result);\n      }\n    }\n  }\n\n  let result;\n\n  if (results.length === 0) {\n    result = (0, _generator().default)(ast, opts.generatorOpts, code);\n  } else if (results.length === 1) {\n    result = results[0];\n\n    if (typeof result.then === \"function\") {\n      throw new Error(`You appear to be using an async codegen plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version.`);\n    }\n  } else {\n    throw new Error(\"More than one plugin attempted to override codegen.\");\n  }\n\n  let {\n    code: outputCode,\n    map: outputMap\n  } = result;\n\n  if (outputMap && inputMap) {\n    outputMap = (0, _mergeMap.default)(inputMap.toObject(), outputMap);\n  }\n\n  if (opts.sourceMaps === \"inline\" || opts.sourceMaps === \"both\") {\n    outputCode += \"\\n\" + _convertSourceMap().default.fromObject(outputMap).toComment();\n  }\n\n  if (opts.sourceMaps === \"inline\") {\n    outputMap = null;\n  }\n\n  return {\n    outputCode,\n    outputMap\n  };\n}"]},"metadata":{},"sourceType":"script"}