{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/alperen.alkan/frontend/src/components/PlanMentorship.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { ListItem } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FeedBackDiolag from \"./FeedBackDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlanMentorship() {\n  _s();\n\n  const [phaseName, setPhaseName] = useState(\"\");\n  const [endDate, setEndDate] = useState(0);\n  const location = useLocation();\n  const [mentorAppId, setMentorAppId] = useState(0);\n  const [phases, setPhases] = useState([1, 2]);\n  /*\n      const useStyles = makeStyles((theme) => ({\n  \n       );\n    \n  */\n\n  const planMentorship = () => {};\n\n  useEffect(() => {\n    setMentorAppId(location.state);\n  }, []);\n\n  const addPhase = () => {\n    var data = {\n      \"name\": phaseName,\n      \"endDate\": endDate\n    };\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.post(\"http://localhost:8080/api/mentorship/add/phase/\" + mentorAppId, data, auth).then(response => console.log(response));\n    setPhases([...phases, data]);\n  };\n\n  console.log(phases);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Phase Name\",\n        onChange: e => setPhaseName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"End date\",\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addPhase,\n        children: \" Add Phase \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      component: \"nav\",\n      \"aria-label\": \"secondary mailbox folders\",\n      children: phases.map(e => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: planMentorship,\n        children: \" Plan the mentorship \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FeedBackDiolag, {\n      stateChanger: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PlanMentorship, \"85H+ZCrHsrJzo0MR2M01Asw9xdY=\", false, function () {\n  return [useLocation];\n});\n\n_c = PlanMentorship;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanMentorship\");","map":{"version":3,"sources":["/Users/alperenalkan/alperen.alkan/frontend/src/components/PlanMentorship.js"],"names":["axios","React","useState","useEffect","TextField","Button","useLocation","useHistory","ListItem","List","ListItemText","FeedBackDiolag","PlanMentorship","phaseName","setPhaseName","endDate","setEndDate","location","mentorAppId","setMentorAppId","phases","setPhases","planMentorship","state","addPhase","data","auth","JSON","parse","localStorage","getItem","post","then","response","console","log","e","target","value","map","name","setState"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useLocation , useHistory } from \"react-router-dom\";\nimport { ListItem } from \"@material-ui/core\";\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FeedBackDiolag from \"./FeedBackDialog\";\n\nexport default function PlanMentorship(){\n    const [phaseName,setPhaseName] = useState(\"\");\n    const [endDate,setEndDate] = useState(0);\n    const location = useLocation();\n    const [mentorAppId,setMentorAppId] = useState(0);\n    const [phases,setPhases] = useState([1,2]);\n/*\n    const useStyles = makeStyles((theme) => ({\n\n     );\n  \n*/\n    const planMentorship = () => {\n    };\n\n\n\n    useEffect(() => {\n       setMentorAppId(location.state)\n    }, [])\n    const addPhase = () => {\n        var data = {\n            \"name\":phaseName,\n            \"endDate\":endDate\n        };\n        var auth = JSON.parse(localStorage.getItem('auth'))\n        axios.post(\"http://localhost:8080/api/mentorship/add/phase/\" + mentorAppId,data,auth).then(response =>console.log( response) );\n        setPhases([...phases,data]);\n    };\n    console.log(phases);\n\n    return(\n         <div>\n        <form >\n    <TextField id=\"standard-basic\" label=\"Phase Name\" onChange={e => setPhaseName(e.target.value)} />\n    <TextField id=\"standard-basic\" label=\"End date\" onChange={e => setEndDate(e.target.value)}/>\n    <Button onClick = {addPhase} > Add Phase </Button>\n  </form>\n    <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n      {phases.map(e=> <ListItem >  <ListItemText primary={e.name} />\n </ListItem>) } \n      </List> \n      <div>\n      <Button onClick = { planMentorship}> Plan the mentorship </Button>\n    </div>\n    <FeedBackDiolag  stateChanger = {setState} />\n\n    </div>\n);\n}"]},"metadata":{},"sourceType":"module"}