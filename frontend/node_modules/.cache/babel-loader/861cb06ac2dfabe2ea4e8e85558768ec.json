{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findPackageData = findPackageData;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.resolveShowConfigPath = resolveShowConfigPath;\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction* findConfigUpwards(rootDir) {\n  return null;\n}\n\nfunction* findPackageData(filepath) {\n  return {\n    filepath,\n    directories: [],\n    pkg: null,\n    isPackage: false\n  };\n}\n\nfunction* findRelativeConfig(pkgData, envName, caller) {\n  return {\n    pkg: null,\n    config: null,\n    ignore: null\n  };\n}\n\nfunction* findRootConfig(dirname, envName, caller) {\n  return null;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);\n}\n\nfunction* resolveShowConfigPath(dirname) {\n  return null;\n}\n\nconst ROOT_CONFIG_FILENAMES = [];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n\nfunction resolvePlugin(name, dirname) {\n  return null;\n}\n\nfunction resolvePreset(name, dirname) {\n  return null;\n}\n\nfunction loadPlugin(name, dirname) {\n  throw new Error(`Cannot load plugin ${name} relative to ${dirname} in a browser`);\n}\n\nfunction loadPreset(name, dirname) {\n  throw new Error(`Cannot load preset ${name} relative to ${dirname} in a browser`);\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/config/files/index-browser.js"],"names":["Object","defineProperty","exports","value","findConfigUpwards","findPackageData","findRelativeConfig","findRootConfig","loadConfig","resolveShowConfigPath","resolvePlugin","resolvePreset","loadPlugin","loadPreset","ROOT_CONFIG_FILENAMES","rootDir","filepath","directories","pkg","isPackage","pkgData","envName","caller","config","ignore","dirname","name","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AACAH,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B;AACAJ,OAAO,CAACK,cAAR,GAAyBA,cAAzB;AACAL,OAAO,CAACM,UAAR,GAAqBA,UAArB;AACAN,OAAO,CAACO,qBAAR,GAAgCA,qBAAhC;AACAP,OAAO,CAACQ,aAAR,GAAwBA,aAAxB;AACAR,OAAO,CAACS,aAAR,GAAwBA,aAAxB;AACAT,OAAO,CAACU,UAAR,GAAqBA,UAArB;AACAV,OAAO,CAACW,UAAR,GAAqBA,UAArB;AACAX,OAAO,CAACY,qBAAR,GAAgC,KAAK,CAArC;;AAEA,UAAUV,iBAAV,CAA4BW,OAA5B,EAAqC;AACnC,SAAO,IAAP;AACD;;AAED,UAAUV,eAAV,CAA0BW,QAA1B,EAAoC;AAClC,SAAO;AACLA,IAAAA,QADK;AAELC,IAAAA,WAAW,EAAE,EAFR;AAGLC,IAAAA,GAAG,EAAE,IAHA;AAILC,IAAAA,SAAS,EAAE;AAJN,GAAP;AAMD;;AAED,UAAUb,kBAAV,CAA6Bc,OAA7B,EAAsCC,OAAtC,EAA+CC,MAA/C,EAAuD;AACrD,SAAO;AACLJ,IAAAA,GAAG,EAAE,IADA;AAELK,IAAAA,MAAM,EAAE,IAFH;AAGLC,IAAAA,MAAM,EAAE;AAHH,GAAP;AAKD;;AAED,UAAUjB,cAAV,CAAyBkB,OAAzB,EAAkCJ,OAAlC,EAA2CC,MAA3C,EAAmD;AACjD,SAAO,IAAP;AACD;;AAED,UAAUd,UAAV,CAAqBkB,IAArB,EAA2BD,OAA3B,EAAoCJ,OAApC,EAA6CC,MAA7C,EAAqD;AACnD,QAAM,IAAIK,KAAJ,CAAW,eAAcD,IAAK,gBAAeD,OAAQ,eAArD,CAAN;AACD;;AAED,UAAUhB,qBAAV,CAAgCgB,OAAhC,EAAyC;AACvC,SAAO,IAAP;AACD;;AAED,MAAMX,qBAAqB,GAAG,EAA9B;AACAZ,OAAO,CAACY,qBAAR,GAAgCA,qBAAhC;;AAEA,SAASJ,aAAT,CAAuBgB,IAAvB,EAA6BD,OAA7B,EAAsC;AACpC,SAAO,IAAP;AACD;;AAED,SAASd,aAAT,CAAuBe,IAAvB,EAA6BD,OAA7B,EAAsC;AACpC,SAAO,IAAP;AACD;;AAED,SAASb,UAAT,CAAoBc,IAApB,EAA0BD,OAA1B,EAAmC;AACjC,QAAM,IAAIE,KAAJ,CAAW,sBAAqBD,IAAK,gBAAeD,OAAQ,eAA5D,CAAN;AACD;;AAED,SAASZ,UAAT,CAAoBa,IAApB,EAA0BD,OAA1B,EAAmC;AACjC,QAAM,IAAIE,KAAJ,CAAW,sBAAqBD,IAAK,gBAAeD,OAAQ,eAA5D,CAAN;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findConfigUpwards = findConfigUpwards;\nexports.findPackageData = findPackageData;\nexports.findRelativeConfig = findRelativeConfig;\nexports.findRootConfig = findRootConfig;\nexports.loadConfig = loadConfig;\nexports.resolveShowConfigPath = resolveShowConfigPath;\nexports.resolvePlugin = resolvePlugin;\nexports.resolvePreset = resolvePreset;\nexports.loadPlugin = loadPlugin;\nexports.loadPreset = loadPreset;\nexports.ROOT_CONFIG_FILENAMES = void 0;\n\nfunction* findConfigUpwards(rootDir) {\n  return null;\n}\n\nfunction* findPackageData(filepath) {\n  return {\n    filepath,\n    directories: [],\n    pkg: null,\n    isPackage: false\n  };\n}\n\nfunction* findRelativeConfig(pkgData, envName, caller) {\n  return {\n    pkg: null,\n    config: null,\n    ignore: null\n  };\n}\n\nfunction* findRootConfig(dirname, envName, caller) {\n  return null;\n}\n\nfunction* loadConfig(name, dirname, envName, caller) {\n  throw new Error(`Cannot load ${name} relative to ${dirname} in a browser`);\n}\n\nfunction* resolveShowConfigPath(dirname) {\n  return null;\n}\n\nconst ROOT_CONFIG_FILENAMES = [];\nexports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;\n\nfunction resolvePlugin(name, dirname) {\n  return null;\n}\n\nfunction resolvePreset(name, dirname) {\n  return null;\n}\n\nfunction loadPlugin(name, dirname) {\n  throw new Error(`Cannot load plugin ${name} relative to ${dirname} in a browser`);\n}\n\nfunction loadPreset(name, dirname) {\n  throw new Error(`Cannot load preset ${name} relative to ${dirname} in a browser`);\n}"]},"metadata":{},"sourceType":"script"}