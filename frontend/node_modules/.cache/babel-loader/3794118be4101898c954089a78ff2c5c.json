{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildRootChain = buildRootChain;\nexports.buildPresetChainWalker = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = _interopRequireDefault(require(\"./pattern-to-regex\"));\n\nvar _printer = require(\"./printer\");\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst debug = (0, _debug().default)(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set()\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  let configReport, babelRcReport;\n  const programmaticLogger = new _printer.ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context, undefined, programmaticLogger);\n  if (!programmaticChain) return null;\n  const programmaticReport = programmaticLogger.output();\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n  const configFileLogger = new _printer.ConfigPrinter();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context, undefined, configFileLogger);\n    if (!result) return null;\n    configReport = configFileLogger.output();\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  const pkgData = typeof context.filename === \"string\" ? yield* (0, _files.findPackageData)(context.filename) : null;\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n    ({\n      ignore: ignoreFile,\n      config: babelrcFile\n    } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n    if (ignoreFile) {\n      fileChain.files.add(ignoreFile.filepath);\n    }\n\n    if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n      isIgnored = true;\n    }\n\n    if (babelrcFile && !isIgnored) {\n      const validatedFile = validateBabelrcFile(babelrcFile);\n      const babelrcLogger = new _printer.ConfigPrinter();\n      const result = yield* loadFileChain(validatedFile, context, undefined, babelrcLogger);\n\n      if (!result) {\n        isIgnored = true;\n      } else {\n        babelRcReport = babelrcLogger.output();\n        mergeChain(fileChain, result);\n      }\n    }\n\n    if (babelrcFile && isIgnored) {\n      fileChain.files.add(babelrcFile.filepath);\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(`Babel configs on \"${context.filename}\" (ascending priority):\\n` + [configReport, babelRcReport, programmaticReport].filter(x => !!x).join(\"\\n\\n\"));\n    return null;\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) babelrcPatterns = [babelrcPatterns];\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().default.resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName),\n  createLogger: (input, context, baseLogger) => buildProgrammaticLogger(input, context, baseLogger)\n});\nconst loadFileChainWalker = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) => buildFileLogger(file.filepath, context, baseLogger)\n});\n\nfunction* loadFileChain(input, context, files, baseLogger) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n\n  if (chain) {\n    chain.files.add(input.filepath);\n  }\n\n  return chain;\n}\n\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath\n  });\n}\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger\n}) {\n  return function* (input, context, files = new Set(), baseLogger) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined\n      });\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined\n          });\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName\n            });\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      config: {\n        options: {\n          ignore,\n          only\n        }\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const {\n      config,\n      index,\n      envName\n    } of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger))) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      mergeChainOpts(chain, config);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files, baseLogger);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...plugins());\n  target.presets.push(...presets());\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n\n    const message = `No config is applied to \"${(_context$filename = context.filename) != null ? _context$filename : \"(unknown)\"}\" because it matches one of \\`ignore: ${JSON.stringify(ignore)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n\n    const message = `No config is applied to \"${(_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\"}\" because it fails to match one of \\`only: ${JSON.stringify(only)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/config/config-chain.js"],"names":["Object","defineProperty","exports","value","buildPresetChain","buildRootChain","buildPresetChainWalker","_path","data","_interopRequireDefault","require","_debug","_options","_patternToRegex","_printer","_files","_caching","_configDescriptors","obj","__esModule","default","debug","arg","context","chain","plugins","dedupDescriptors","presets","options","map","o","normalizeOptions","files","Set","makeChainWalker","root","preset","loadPresetDescriptors","env","envName","loadPresetEnvDescriptors","overrides","index","loadPresetOverridesDescriptors","overridesEnv","loadPresetOverridesEnvDescriptors","createLogger","makeWeakCacheSync","buildRootDescriptors","alias","createUncachedDescriptors","makeStrongCacheSync","buildEnvDescriptors","buildOverrideDescriptors","buildOverrideEnvDescriptors","opts","configReport","babelRcReport","programmaticLogger","ConfigPrinter","programmaticChain","loadProgrammaticChain","dirname","cwd","undefined","programmaticReport","output","configFile","loadConfig","caller","findRootConfig","babelrc","babelrcRoots","babelrcRootsDirectory","configFileChain","emptyChain","configFileLogger","validatedFile","validateConfigFile","result","loadFileChain","mergeChain","pkgData","filename","findPackageData","ignoreFile","babelrcFile","isIgnored","fileChain","babelrcLoadEnabled","ignore","config","findRelativeConfig","add","filepath","shouldIgnore","validateBabelrcFile","babelrcLogger","showConfig","console","log","filter","x","join","fileHandling","absoluteRoot","directories","indexOf","babelrcPatterns","Array","isArray","pat","resolve","length","some","directory","matchPattern","file","validate","validateExtendFile","input","createCachedDescriptors","baseLogger","buildProgrammaticLogger","loadFileChainWalker","loadFileDescriptors","loadFileEnvDescriptors","loadFileOverridesDescriptors","loadFileOverridesEnvDescriptors","buildFileLogger","configure","ChainFormatter","Config","descriptors","_","_context$caller","Programmatic","callerName","name","Error","override","flattenedConfigs","rootOpts","configIsApplicable","push","envOpts","forEach","overrideOps","overrideEnvOpts","only","logger","mergeExtendsChain","mergeChainOpts","extends","has","from","delete","target","source","assign","passPerPreset","test","include","exclude","prototype","hasOwnProperty","call","sourceMaps","sourceMap","items","Map","item","fnKey","nameMap","get","set","desc","ownPass","reduce","acc","configFieldIsApplicable","patterns","matchesPatterns","_context$filename","message","JSON","stringify","_context$filename2","pattern","pathToTest"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildPresetChain = buildPresetChain;\nexports.buildRootChain = buildRootChain;\nexports.buildPresetChainWalker = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _debug() {\n  const data = _interopRequireDefault(require(\"debug\"));\n\n  _debug = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _options = require(\"./validation/options\");\n\nvar _patternToRegex = _interopRequireDefault(require(\"./pattern-to-regex\"));\n\nvar _printer = require(\"./printer\");\n\nvar _files = require(\"./files\");\n\nvar _caching = require(\"./caching\");\n\nvar _configDescriptors = require(\"./config-descriptors\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst debug = (0, _debug().default)(\"babel:config:config-chain\");\n\nfunction* buildPresetChain(arg, context) {\n  const chain = yield* buildPresetChainWalker(arg, context);\n  if (!chain) return null;\n  return {\n    plugins: dedupDescriptors(chain.plugins),\n    presets: dedupDescriptors(chain.presets),\n    options: chain.options.map(o => normalizeOptions(o)),\n    files: new Set()\n  };\n}\n\nconst buildPresetChainWalker = makeChainWalker({\n  root: preset => loadPresetDescriptors(preset),\n  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),\n  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),\n  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName),\n  createLogger: () => () => {}\n});\nexports.buildPresetChainWalker = buildPresetChainWalker;\nconst loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));\nconst loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));\nconst loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction* buildRootChain(opts, context) {\n  let configReport, babelRcReport;\n  const programmaticLogger = new _printer.ConfigPrinter();\n  const programmaticChain = yield* loadProgrammaticChain({\n    options: opts,\n    dirname: context.cwd\n  }, context, undefined, programmaticLogger);\n  if (!programmaticChain) return null;\n  const programmaticReport = programmaticLogger.output();\n  let configFile;\n\n  if (typeof opts.configFile === \"string\") {\n    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);\n  } else if (opts.configFile !== false) {\n    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);\n  }\n\n  let {\n    babelrc,\n    babelrcRoots\n  } = opts;\n  let babelrcRootsDirectory = context.cwd;\n  const configFileChain = emptyChain();\n  const configFileLogger = new _printer.ConfigPrinter();\n\n  if (configFile) {\n    const validatedFile = validateConfigFile(configFile);\n    const result = yield* loadFileChain(validatedFile, context, undefined, configFileLogger);\n    if (!result) return null;\n    configReport = configFileLogger.output();\n\n    if (babelrc === undefined) {\n      babelrc = validatedFile.options.babelrc;\n    }\n\n    if (babelrcRoots === undefined) {\n      babelrcRootsDirectory = validatedFile.dirname;\n      babelrcRoots = validatedFile.options.babelrcRoots;\n    }\n\n    mergeChain(configFileChain, result);\n  }\n\n  const pkgData = typeof context.filename === \"string\" ? yield* (0, _files.findPackageData)(context.filename) : null;\n  let ignoreFile, babelrcFile;\n  let isIgnored = false;\n  const fileChain = emptyChain();\n\n  if ((babelrc === true || babelrc === undefined) && pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {\n    ({\n      ignore: ignoreFile,\n      config: babelrcFile\n    } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));\n\n    if (ignoreFile) {\n      fileChain.files.add(ignoreFile.filepath);\n    }\n\n    if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {\n      isIgnored = true;\n    }\n\n    if (babelrcFile && !isIgnored) {\n      const validatedFile = validateBabelrcFile(babelrcFile);\n      const babelrcLogger = new _printer.ConfigPrinter();\n      const result = yield* loadFileChain(validatedFile, context, undefined, babelrcLogger);\n\n      if (!result) {\n        isIgnored = true;\n      } else {\n        babelRcReport = babelrcLogger.output();\n        mergeChain(fileChain, result);\n      }\n    }\n\n    if (babelrcFile && isIgnored) {\n      fileChain.files.add(babelrcFile.filepath);\n    }\n  }\n\n  if (context.showConfig) {\n    console.log(`Babel configs on \"${context.filename}\" (ascending priority):\\n` + [configReport, babelRcReport, programmaticReport].filter(x => !!x).join(\"\\n\\n\"));\n    return null;\n  }\n\n  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);\n  return {\n    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),\n    presets: isIgnored ? [] : dedupDescriptors(chain.presets),\n    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),\n    fileHandling: isIgnored ? \"ignored\" : \"transpile\",\n    ignore: ignoreFile || undefined,\n    babelrc: babelrcFile || undefined,\n    config: configFile || undefined,\n    files: chain.files\n  };\n}\n\nfunction babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {\n  if (typeof babelrcRoots === \"boolean\") return babelrcRoots;\n  const absoluteRoot = context.root;\n\n  if (babelrcRoots === undefined) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  let babelrcPatterns = babelrcRoots;\n  if (!Array.isArray(babelrcPatterns)) babelrcPatterns = [babelrcPatterns];\n  babelrcPatterns = babelrcPatterns.map(pat => {\n    return typeof pat === \"string\" ? _path().default.resolve(babelrcRootsDirectory, pat) : pat;\n  });\n\n  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {\n    return pkgData.directories.indexOf(absoluteRoot) !== -1;\n  }\n\n  return babelrcPatterns.some(pat => {\n    if (typeof pat === \"string\") {\n      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);\n    }\n\n    return pkgData.directories.some(directory => {\n      return matchPattern(pat, babelrcRootsDirectory, directory, context);\n    });\n  });\n}\n\nconst validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"configfile\", file.options)\n}));\nconst validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"babelrcfile\", file.options)\n}));\nconst validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({\n  filepath: file.filepath,\n  dirname: file.dirname,\n  options: (0, _options.validate)(\"extendsfile\", file.options)\n}));\nconst loadProgrammaticChain = makeChainWalker({\n  root: input => buildRootDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors),\n  env: (input, envName) => buildEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, envName),\n  overrides: (input, index) => buildOverrideDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index),\n  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, \"base\", _configDescriptors.createCachedDescriptors, index, envName),\n  createLogger: (input, context, baseLogger) => buildProgrammaticLogger(input, context, baseLogger)\n});\nconst loadFileChainWalker = makeChainWalker({\n  root: file => loadFileDescriptors(file),\n  env: (file, envName) => loadFileEnvDescriptors(file)(envName),\n  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),\n  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName),\n  createLogger: (file, context, baseLogger) => buildFileLogger(file.filepath, context, baseLogger)\n});\n\nfunction* loadFileChain(input, context, files, baseLogger) {\n  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);\n\n  if (chain) {\n    chain.files.add(input.filepath);\n  }\n\n  return chain;\n}\n\nconst loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));\nconst loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));\nconst loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));\nconst loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));\n\nfunction buildFileLogger(filepath, context, baseLogger) {\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {\n    filepath\n  });\n}\n\nfunction buildRootDescriptors({\n  dirname,\n  options\n}, alias, descriptors) {\n  return descriptors(dirname, options, alias);\n}\n\nfunction buildProgrammaticLogger(_, context, baseLogger) {\n  var _context$caller;\n\n  if (!baseLogger) {\n    return () => {};\n  }\n\n  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {\n    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name\n  });\n}\n\nfunction buildEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, envName) {\n  const opts = options.env && options.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.env[\"${envName}\"]`) : null;\n}\n\nfunction buildOverrideDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index) {\n  const opts = options.overrides && options.overrides[index];\n  if (!opts) throw new Error(\"Assertion failure - missing override\");\n  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);\n}\n\nfunction buildOverrideEnvDescriptors({\n  dirname,\n  options\n}, alias, descriptors, index, envName) {\n  const override = options.overrides && options.overrides[index];\n  if (!override) throw new Error(\"Assertion failure - missing override\");\n  const opts = override.env && override.env[envName];\n  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env[\"${envName}\"]`) : null;\n}\n\nfunction makeChainWalker({\n  root,\n  env,\n  overrides,\n  overridesEnv,\n  createLogger\n}) {\n  return function* (input, context, files = new Set(), baseLogger) {\n    const {\n      dirname\n    } = input;\n    const flattenedConfigs = [];\n    const rootOpts = root(input);\n\n    if (configIsApplicable(rootOpts, dirname, context)) {\n      flattenedConfigs.push({\n        config: rootOpts,\n        envName: undefined,\n        index: undefined\n      });\n      const envOpts = env(input, context.envName);\n\n      if (envOpts && configIsApplicable(envOpts, dirname, context)) {\n        flattenedConfigs.push({\n          config: envOpts,\n          envName: context.envName,\n          index: undefined\n        });\n      }\n\n      (rootOpts.options.overrides || []).forEach((_, index) => {\n        const overrideOps = overrides(input, index);\n\n        if (configIsApplicable(overrideOps, dirname, context)) {\n          flattenedConfigs.push({\n            config: overrideOps,\n            index,\n            envName: undefined\n          });\n          const overrideEnvOpts = overridesEnv(input, index, context.envName);\n\n          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {\n            flattenedConfigs.push({\n              config: overrideEnvOpts,\n              index,\n              envName: context.envName\n            });\n          }\n        }\n      });\n    }\n\n    if (flattenedConfigs.some(({\n      config: {\n        options: {\n          ignore,\n          only\n        }\n      }\n    }) => shouldIgnore(context, ignore, only, dirname))) {\n      return null;\n    }\n\n    const chain = emptyChain();\n    const logger = createLogger(input, context, baseLogger);\n\n    for (const {\n      config,\n      index,\n      envName\n    } of flattenedConfigs) {\n      if (!(yield* mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger))) {\n        return null;\n      }\n\n      logger(config, index, envName);\n      mergeChainOpts(chain, config);\n    }\n\n    return chain;\n  };\n}\n\nfunction* mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {\n  if (opts.extends === undefined) return true;\n  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);\n\n  if (files.has(file)) {\n    throw new Error(`Configuration cycle detected loading ${file.filepath}.\\n` + `File already loaded following the config chain:\\n` + Array.from(files, file => ` - ${file.filepath}`).join(\"\\n\"));\n  }\n\n  files.add(file);\n  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files, baseLogger);\n  files.delete(file);\n  if (!fileChain) return false;\n  mergeChain(chain, fileChain);\n  return true;\n}\n\nfunction mergeChain(target, source) {\n  target.options.push(...source.options);\n  target.plugins.push(...source.plugins);\n  target.presets.push(...source.presets);\n\n  for (const file of source.files) {\n    target.files.add(file);\n  }\n\n  return target;\n}\n\nfunction mergeChainOpts(target, {\n  options,\n  plugins,\n  presets\n}) {\n  target.options.push(options);\n  target.plugins.push(...plugins());\n  target.presets.push(...presets());\n  return target;\n}\n\nfunction emptyChain() {\n  return {\n    options: [],\n    presets: [],\n    plugins: [],\n    files: new Set()\n  };\n}\n\nfunction normalizeOptions(opts) {\n  const options = Object.assign({}, opts);\n  delete options.extends;\n  delete options.env;\n  delete options.overrides;\n  delete options.plugins;\n  delete options.presets;\n  delete options.passPerPreset;\n  delete options.ignore;\n  delete options.only;\n  delete options.test;\n  delete options.include;\n  delete options.exclude;\n\n  if (Object.prototype.hasOwnProperty.call(options, \"sourceMap\")) {\n    options.sourceMaps = options.sourceMap;\n    delete options.sourceMap;\n  }\n\n  return options;\n}\n\nfunction dedupDescriptors(items) {\n  const map = new Map();\n  const descriptors = [];\n\n  for (const item of items) {\n    if (typeof item.value === \"function\") {\n      const fnKey = item.value;\n      let nameMap = map.get(fnKey);\n\n      if (!nameMap) {\n        nameMap = new Map();\n        map.set(fnKey, nameMap);\n      }\n\n      let desc = nameMap.get(item.name);\n\n      if (!desc) {\n        desc = {\n          value: item\n        };\n        descriptors.push(desc);\n        if (!item.ownPass) nameMap.set(item.name, desc);\n      } else {\n        desc.value = item;\n      }\n    } else {\n      descriptors.push({\n        value: item\n      });\n    }\n  }\n\n  return descriptors.reduce((acc, desc) => {\n    acc.push(desc.value);\n    return acc;\n  }, []);\n}\n\nfunction configIsApplicable({\n  options\n}, dirname, context) {\n  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));\n}\n\nfunction configFieldIsApplicable(context, test, dirname) {\n  const patterns = Array.isArray(test) ? test : [test];\n  return matchesPatterns(context, patterns, dirname);\n}\n\nfunction shouldIgnore(context, ignore, only, dirname) {\n  if (ignore && matchesPatterns(context, ignore, dirname)) {\n    var _context$filename;\n\n    const message = `No config is applied to \"${(_context$filename = context.filename) != null ? _context$filename : \"(unknown)\"}\" because it matches one of \\`ignore: ${JSON.stringify(ignore)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  if (only && !matchesPatterns(context, only, dirname)) {\n    var _context$filename2;\n\n    const message = `No config is applied to \"${(_context$filename2 = context.filename) != null ? _context$filename2 : \"(unknown)\"}\" because it fails to match one of \\`only: ${JSON.stringify(only)}\\` from \"${dirname}\"`;\n    debug(message);\n\n    if (context.showConfig) {\n      console.log(message);\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction matchesPatterns(context, patterns, dirname) {\n  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));\n}\n\nfunction matchPattern(pattern, dirname, pathToTest, context) {\n  if (typeof pattern === \"function\") {\n    return !!pattern(pathToTest, {\n      dirname,\n      envName: context.envName,\n      caller: context.caller\n    });\n  }\n\n  if (typeof pathToTest !== \"string\") {\n    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);\n  }\n\n  if (typeof pattern === \"string\") {\n    pattern = (0, _patternToRegex.default)(pattern, dirname);\n  }\n\n  return pattern.test(pathToTest);\n}"]},"metadata":{},"sourceType":"script"}