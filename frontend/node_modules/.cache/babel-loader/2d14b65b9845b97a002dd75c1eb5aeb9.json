{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/alperen.alkan/frontend/src/components/AdminTopicPanel.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormDialog from './FormDialog';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'col1',\n  headerName: 'Main Topic',\n  width: 200\n}, {\n  field: 'col2',\n  headerName: 'Sub Topics',\n  width: 250\n}];\nconst rows = [{\n  id: 1,\n  col1: \"Hello\",\n  col2: 'World'\n}, {\n  id: 2,\n  col1: 'XGrid',\n  col2: 'is Awesome'\n}, {\n  id: 3,\n  col1: 'Material-UI',\n  col2: 'is Amazing'\n}];\nexport default function AdminTopicPanel() {\n  _s();\n\n  const history = useHistory();\n  const [rows, setRows] = useState([{\n    id: 5,\n    col1: \"dsa\",\n    col2: \"dsa\"\n  }]);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"dsa\");\n  const [isFormSended, setForm] = useState(false);\n  const [state, setState] = useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('role') != 'admin') {\n      alert(\"you are not admin so you cannot go to the admin related pages\");\n      history.push('/dashboard');\n    }\n\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\", auth).then(response => {\n      setRows(response.data.map(topics => {\n        return {\n          id: topics.id,\n          col1: topics.title,\n          col2: topics.subTitle\n        };\n      }));\n    });\n    console.log(state);\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminTopicPanel\",\n    style: {\n      height: 300,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n      stateChanger: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AdminTopicPanel, \"VMO0fzIV5XGYSHRq/f/gr0zAAdw=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminTopicPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminTopicPanel\");","map":{"version":3,"sources":["/Users/alperenalkan/alperen.alkan/frontend/src/components/AdminTopicPanel.js"],"names":["axios","React","useState","useEffect","DataGrid","GridRowsProp","GridColDef","makeStyles","FormDialog","useHistory","columns","field","headerName","width","rows","id","col1","col2","AdminTopicPanel","history","setRows","open","setOpen","selectedValue","setSelectedValue","isFormSended","setForm","state","setState","handleClickOpen","handleClose","value","localStorage","getItem","alert","push","auth","JSON","parse","get","then","response","data","map","topics","title","subTitle","console","log","height"],"mappings":"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","sourcesContent":["  import axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid,GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormDialog from './FormDialog';\nimport { useHistory } from 'react-router';\n\n\nconst columns= [\n  { field: 'col1', headerName: 'Main Topic', width: 200 },\n  { field: 'col2', headerName: 'Sub Topics', width: 250 },\n];\nconst rows = [\n  { id: 1, col1: \"Hello\", col2: 'World' },\n  { id: 2, col1: 'XGrid', col2: 'is Awesome' },\n  { id: 3, col1: 'Material-UI', col2: 'is Amazing' },\n];\n\n\n\nexport default function AdminTopicPanel(){\n  const history = useHistory();\n  const [rows,setRows]=useState([{ id: 5, col1: \"dsa\", col2: \"dsa\" }]);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"dsa\");\n  const [isFormSended,setForm] = useState(false);\n  const[state, setState]=useState(true);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n\nconst handleClose = (value) => {\n  setOpen(false);\n  setSelectedValue(value);\n};\n\n  useEffect(()  => {\n    if(localStorage.getItem('role')!= 'admin'){\n      alert(\"you are not admin so you cannot go to the admin related pages\")\n      history.push('/dashboard');\n    }\n\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\",auth).then(response => {\n        setRows(response.data.map(topics => {return{id: topics.id, col1: topics.title, col2:topics.subTitle }}));\n    });\n    console.log(state);\n  }, [state]);\n  \n  return(\n      <div className=\"AdminTopicPanel\" style={{ height: 300, width: '100%' }}>\n        <DataGrid\n  rows={rows}\n  columns={columns}\n  pageSize={10}\n  checkboxSelection\n  disableSelectionOnClick\n/>\n<FormDialog  stateChanger = {setState} />\n            </div>\n      );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}