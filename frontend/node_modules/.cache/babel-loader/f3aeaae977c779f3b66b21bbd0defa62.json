{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/obss/frontend/frontend/src/components/ApplyToBeMentor.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApplyToBeMentor() {\n  _s();\n\n  const options = [{\n    label: \"Grapes 🍇\",\n    value: \"grapes\"\n  }];\n  const [selected, setSelected] = useState([]);\n  const initialValue = [{\n    id: 0,\n    title: \"dsa\",\n    subTitle: \"---SELECT-OPTION----\"\n  }];\n  const [stateOptions, setStateValues] = useState(initialValue);\n  const [optionsArr, setOptions] = useState(options);\n  const [titleId, setTitle] = useState(\"\");\n  const [subTitleId, setSubTitle] = useState(\"\");\n  const [thoughts, setThoughts] = useState(\"Please write your thoughts\");\n  const [subTArray, setSubT] = useState(initialValue);\n\n  function handleSubmit() {\n    console.log(\"dsa\");\n  }\n\n  useEffect(() => {\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\", auth).then(response => {\n      setStateValues(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (stateOptions.find(title => title.title === titleId) === undefined) {\n      console.log(\"undefined\");\n    } else {\n      setOptions(stateOptions.find(title => title.title === titleId).subTitle.map(response => {\n        return {\n          label: response,\n          value: response\n        };\n      }));\n    } // console.log(optionsArr)\n\n  }, [titleId]); //This will run only once  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    cnplassName: \"ApplyToBeMentor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"dsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setTitle(e.target.value),\n      children: stateOptions.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: topic.title\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n      options: optionsArr,\n      value: subTitleId,\n      onChange: setSubTitle,\n      labelledBy: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onClick: e => setThoughts(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApplyToBeMentor, \"EriRbiPCcetJvINQ0cVh3vCWwaw=\");\n\n_c = ApplyToBeMentor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyToBeMentor\");","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/src/components/ApplyToBeMentor.js"],"names":["axios","React","useState","useEffect","MultiSelect","ApplyToBeMentor","options","label","value","selected","setSelected","initialValue","id","title","subTitle","stateOptions","setStateValues","optionsArr","setOptions","titleId","setTitle","subTitleId","setSubTitle","thoughts","setThoughts","subTArray","setSubT","handleSubmit","console","log","auth","JSON","parse","localStorage","getItem","get","then","response","data","find","undefined","map","e","target","topic"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\n\n\nexport default function ApplyToBeMentor(){\n    const options = [\n        { label: \"Grapes 🍇\", value: \"grapes\" },\n\n      ];\n      const [selected, setSelected] = useState([]);\n\n    const initialValue = [\n        { id: 0,title:\"dsa\", subTitle: \"---SELECT-OPTION----\" }];\n        const [stateOptions, setStateValues] = useState(initialValue);\n    const [optionsArr, setOptions] = useState(options);\n    const [titleId, setTitle] = useState(\"\");\n    const [subTitleId, setSubTitle] = useState(\"\");\n\n    const [thoughts, setThoughts] = useState(\"Please write your thoughts\")\n    const [subTArray,setSubT] = useState(initialValue);\n\n   function handleSubmit(){\n    console.log(\"dsa\");\n   }\n\n    useEffect(()  => {\n        var auth = JSON.parse(localStorage.getItem('auth'));\n\n       axios.get(\"http://localhost:8080/api/topic\",auth).then(response => {\n                setStateValues(response.data);\n                console.log(response.data)\n\n          }\n        );    }, []);\n    useEffect(()  => {\n        if(stateOptions.find(title => title.title === titleId) === undefined)\n        {\n            console.log(\"undefined\");\n        }else{\n         setOptions(stateOptions.find(title => title.title === titleId).subTitle.map( (response) => {\n             return {label : response, value: response}}))\n             }    // console.log(optionsArr)\n                }, [titleId]); //This will run only once  \n    \n    return(\n        <div cnplassName=\"ApplyToBeMentor\">\n            <h1>dsa</h1>\n            <select onChange={(e) => setTitle(e.target.value)}>\n                {stateOptions.map(topic => <option key = {topic.id}>{topic.title}</option> )}\n            </select> \n    <MultiSelect\n        options={optionsArr}\n        value={subTitleId}\n        onChange={setSubTitle}\n        labelledBy=\"Select\"\n      />\n        <form>\n            <input type=\"text\" onClick = {e => setThoughts(e.target.value)}/>\n            <button onClick={handleSubmit} >\n          Login\n        </button>\n\n       </form>\n\n              </div>\n        );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}