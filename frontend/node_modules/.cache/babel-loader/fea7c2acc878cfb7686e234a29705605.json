{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const filename = typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined;\n  const showConfigPath = yield* (0, _files.resolveShowConfigPath)(absoluteCwd);\n  const context = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.cloneInputAst = cloneInputAst;\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (opts) {\n  let showIgnoredFiles = false;\n\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    var _opts = opts;\n    ({\n      showIgnoredFiles\n    } = _opts);\n    opts = _objectWithoutPropertiesLoose(_opts, [\"showIgnoredFiles\"]);\n    _opts;\n  }\n\n  const result = yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config,\n    fileHandling,\n    files\n  } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config, fileHandling, files) {\n    this.options = void 0;\n    this.babelrc = void 0;\n    this.babelignore = void 0;\n    this.config = void 0;\n    this.fileHandling = void 0;\n    this.files = void 0;\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/config/partial.js"],"names":["Object","defineProperty","exports","value","default","loadPrivatePartialConfig","loadPartialConfig","_path","data","_interopRequireDefault","require","_gensync","_plugin","_util","_item","_configChain","_environment","_options","_files","obj","__esModule","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","key","i","length","indexOf","resolveRootMode","rootDir","rootMode","upwardRootDir","findConfigUpwards","assign","Error","ROOT_CONFIG_FILENAMES","join","code","dirname","inputOpts","Array","isArray","args","validate","envName","getEnv","cwd","root","caller","cloneInputAst","absoluteCwd","resolve","absoluteRootDir","filename","undefined","showConfigPath","resolveShowConfigPath","context","showConfig","configChain","buildRootChain","options","forEach","opts","mergeOptions","babelrc","configFile","passPerPreset","plugins","map","descriptor","createItemFromDescriptor","presets","fileHandling","ignore","config","files","showIgnoredFiles","_opts","result","item","PartialConfig","filepath","constructor","babelignore","freeze","hasFilesystemConfig","prototype"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadPrivatePartialConfig;\nexports.loadPartialConfig = void 0;\n\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n\n  _path = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = _interopRequireDefault(require(\"./plugin\"));\n\nvar _util = require(\"./util\");\n\nvar _item = require(\"./item\");\n\nvar _configChain = require(\"./config-chain\");\n\nvar _environment = require(\"./helpers/environment\");\n\nvar _options = require(\"./validation/options\");\n\nvar _files = require(\"./files\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction* resolveRootMode(rootDir, rootMode) {\n  switch (rootMode) {\n    case \"root\":\n      return rootDir;\n\n    case \"upward-optional\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        return upwardRootDir === null ? rootDir : upwardRootDir;\n      }\n\n    case \"upward\":\n      {\n        const upwardRootDir = yield* (0, _files.findConfigUpwards)(rootDir);\n        if (upwardRootDir !== null) return upwardRootDir;\n        throw Object.assign(new Error(`Babel was run with rootMode:\"upward\" but a root could not ` + `be found when searching upward from \"${rootDir}\".\\n` + `One of the following config files must be in the directory tree: ` + `\"${_files.ROOT_CONFIG_FILENAMES.join(\", \")}\".`), {\n          code: \"BABEL_ROOT_NOT_FOUND\",\n          dirname: rootDir\n        });\n      }\n\n    default:\n      throw new Error(`Assertion failure - unknown rootMode value.`);\n  }\n}\n\nfunction* loadPrivatePartialConfig(inputOpts) {\n  if (inputOpts != null && (typeof inputOpts !== \"object\" || Array.isArray(inputOpts))) {\n    throw new Error(\"Babel options must be an object, null, or undefined\");\n  }\n\n  const args = inputOpts ? (0, _options.validate)(\"arguments\", inputOpts) : {};\n  const {\n    envName = (0, _environment.getEnv)(),\n    cwd = \".\",\n    root: rootDir = \".\",\n    rootMode = \"root\",\n    caller,\n    cloneInputAst = true\n  } = args;\n\n  const absoluteCwd = _path().default.resolve(cwd);\n\n  const absoluteRootDir = yield* resolveRootMode(_path().default.resolve(absoluteCwd, rootDir), rootMode);\n  const filename = typeof args.filename === \"string\" ? _path().default.resolve(cwd, args.filename) : undefined;\n  const showConfigPath = yield* (0, _files.resolveShowConfigPath)(absoluteCwd);\n  const context = {\n    filename,\n    cwd: absoluteCwd,\n    root: absoluteRootDir,\n    envName,\n    caller,\n    showConfig: showConfigPath === filename\n  };\n  const configChain = yield* (0, _configChain.buildRootChain)(args, context);\n  if (!configChain) return null;\n  const options = {};\n  configChain.options.forEach(opts => {\n    (0, _util.mergeOptions)(options, opts);\n  });\n  options.cloneInputAst = cloneInputAst;\n  options.babelrc = false;\n  options.configFile = false;\n  options.passPerPreset = false;\n  options.envName = context.envName;\n  options.cwd = context.cwd;\n  options.root = context.root;\n  options.filename = typeof context.filename === \"string\" ? context.filename : undefined;\n  options.plugins = configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  options.presets = configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor));\n  return {\n    options,\n    context,\n    fileHandling: configChain.fileHandling,\n    ignore: configChain.ignore,\n    babelrc: configChain.babelrc,\n    config: configChain.config,\n    files: configChain.files\n  };\n}\n\nconst loadPartialConfig = (0, _gensync().default)(function* (opts) {\n  let showIgnoredFiles = false;\n\n  if (typeof opts === \"object\" && opts !== null && !Array.isArray(opts)) {\n    var _opts = opts;\n    ({\n      showIgnoredFiles\n    } = _opts);\n    opts = _objectWithoutPropertiesLoose(_opts, [\"showIgnoredFiles\"]);\n    _opts;\n  }\n\n  const result = yield* loadPrivatePartialConfig(opts);\n  if (!result) return null;\n  const {\n    options,\n    babelrc,\n    ignore,\n    config,\n    fileHandling,\n    files\n  } = result;\n\n  if (fileHandling === \"ignored\" && !showIgnoredFiles) {\n    return null;\n  }\n\n  (options.plugins || []).forEach(item => {\n    if (item.value instanceof _plugin.default) {\n      throw new Error(\"Passing cached plugin instances is not supported in \" + \"babel.loadPartialConfig()\");\n    }\n  });\n  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files);\n});\nexports.loadPartialConfig = loadPartialConfig;\n\nclass PartialConfig {\n  constructor(options, babelrc, ignore, config, fileHandling, files) {\n    this.options = void 0;\n    this.babelrc = void 0;\n    this.babelignore = void 0;\n    this.config = void 0;\n    this.fileHandling = void 0;\n    this.files = void 0;\n    this.options = options;\n    this.babelignore = ignore;\n    this.babelrc = babelrc;\n    this.config = config;\n    this.fileHandling = fileHandling;\n    this.files = files;\n    Object.freeze(this);\n  }\n\n  hasFilesystemConfig() {\n    return this.babelrc !== undefined || this.config !== undefined;\n  }\n\n}\n\nObject.freeze(PartialConfig.prototype);"]},"metadata":{},"sourceType":"script"}