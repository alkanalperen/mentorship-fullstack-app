{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  loose,\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  noInterop,\n  importInterop = noInterop ? \"none\" : \"babel\",\n  lazy,\n  esNamespaceOnly,\n  constantReexports = loose,\n  enumerableModuleMeta = loose\n}) {\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop,\n    initializeReexports: constantReexports,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, constantReexports));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return t.callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, t.booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {\n  const statements = [];\n  let srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (constantReexports) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  constantComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: (0, _template.default)`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, constantReexports) => {\n  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT = t.cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || t.isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerableModuleMeta = false) {\n  return (enumerableModuleMeta ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || !!data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, constantReexports = false) {\n  const initStatements = [];\n  const exportNames = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n    } else {\n      exportNames.push(...data.names);\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!constantReexports) {\n      initStatements.push(...buildReexportsFromMeta(metadata, data, false));\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportNames.push(exportName);\n    }\n  }\n\n  initStatements.push(...chunk(exportNames, 100).map(members => {\n    return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n  }));\n  return initStatements;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return t.expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}\n\nfunction chunk(array, size) {\n  const chunks = [];\n\n  for (let i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n\n  return chunks;\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/helper-module-transforms/lib/index.js"],"names":["Object","defineProperty","exports","value","rewriteModuleStatementsAndPrepareHeader","ensureStatementsHoisted","wrapInterop","buildNamespaceInitStatements","enumerable","get","_helperModuleImports","isModule","_rewriteThis","default","_normalizeAndLoadMetadata","hasExports","isSideEffectImport","_getModuleName","_assert","require","t","_template","_rewriteLiveReferences","path","loose","exportName","strict","allowTopLevelThis","strictMode","noInterop","importInterop","lazy","esNamespaceOnly","constantReexports","enumerableModuleMeta","validateImportInteropOption","node","sourceType","meta","initializeReexports","hasStrict","directives","some","directive","unshiftContainer","directiveLiteral","headers","push","buildESModuleHeader","nameList","buildExportNameListDeclaration","exportNameListName","name","statement","buildExportInitializationStatements","statements","forEach","header","_blockHoist","programPath","expr","type","callExpression","hub","addHelper","booleanLiteral","helper","Error","metadata","sourceMetadata","srcNamespace","identifier","localName","importsNamespace","NAME","SOURCE","cloneNode","buildReexportsFromMeta","reexportNamespace","EXPORTS","NAMESPACE","reexportAll","buildNamespaceReexport","loc","ReexportTemplate","constant","constantComputed","spec","namespace","stringSpecifiers","Array","from","reexports","importName","NAMESPACE_IMPORT","interop","has","memberExpression","stringLiteral","astNodes","EXPORT_NAME","isIdentifier","VERIFY_NAME_LIST","EXPORTS_LIST","exportedVars","create","data","local","values","names","hasReexport","source","keys","length","scope","generateUidIdentifier","variableDeclaration","variableDeclarator","valueToNode","initStatements","exportNames","kind","buildInitStatement","chunk","map","members","buildUndefinedNode","InitTemplate","computed","expression","initExpr","expressionStatement","reduce","acc","params","VALUE","array","size","chunks","i","slice"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;\nexports.ensureStatementsHoisted = ensureStatementsHoisted;\nexports.wrapInterop = wrapInterop;\nexports.buildNamespaceInitStatements = buildNamespaceInitStatements;\nObject.defineProperty(exports, \"isModule\", {\n  enumerable: true,\n  get: function () {\n    return _helperModuleImports.isModule;\n  }\n});\nObject.defineProperty(exports, \"rewriteThis\", {\n  enumerable: true,\n  get: function () {\n    return _rewriteThis.default;\n  }\n});\nObject.defineProperty(exports, \"hasExports\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.hasExports;\n  }\n});\nObject.defineProperty(exports, \"isSideEffectImport\", {\n  enumerable: true,\n  get: function () {\n    return _normalizeAndLoadMetadata.isSideEffectImport;\n  }\n});\nObject.defineProperty(exports, \"getModuleName\", {\n  enumerable: true,\n  get: function () {\n    return _getModuleName.default;\n  }\n});\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _template = require(\"@babel/template\");\n\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\n\nvar _rewriteThis = require(\"./rewrite-this\");\n\nvar _rewriteLiveReferences = require(\"./rewrite-live-references\");\n\nvar _normalizeAndLoadMetadata = require(\"./normalize-and-load-metadata\");\n\nvar _getModuleName = require(\"./get-module-name\");\n\nfunction rewriteModuleStatementsAndPrepareHeader(path, {\n  loose,\n  exportName,\n  strict,\n  allowTopLevelThis,\n  strictMode,\n  noInterop,\n  importInterop = noInterop ? \"none\" : \"babel\",\n  lazy,\n  esNamespaceOnly,\n  constantReexports = loose,\n  enumerableModuleMeta = loose\n}) {\n  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);\n\n  _assert((0, _helperModuleImports.isModule)(path), \"Cannot process module statements in a script\");\n\n  path.node.sourceType = \"script\";\n  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {\n    importInterop,\n    initializeReexports: constantReexports,\n    lazy,\n    esNamespaceOnly\n  });\n\n  if (!allowTopLevelThis) {\n    (0, _rewriteThis.default)(path);\n  }\n\n  (0, _rewriteLiveReferences.default)(path, meta);\n\n  if (strictMode !== false) {\n    const hasStrict = path.node.directives.some(directive => {\n      return directive.value.value === \"use strict\";\n    });\n\n    if (!hasStrict) {\n      path.unshiftContainer(\"directives\", t.directive(t.directiveLiteral(\"use strict\")));\n    }\n  }\n\n  const headers = [];\n\n  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {\n    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));\n  }\n\n  const nameList = buildExportNameListDeclaration(path, meta);\n\n  if (nameList) {\n    meta.exportNameListName = nameList.name;\n    headers.push(nameList.statement);\n  }\n\n  headers.push(...buildExportInitializationStatements(path, meta, constantReexports));\n  return {\n    meta,\n    headers\n  };\n}\n\nfunction ensureStatementsHoisted(statements) {\n  statements.forEach(header => {\n    header._blockHoist = 3;\n  });\n}\n\nfunction wrapInterop(programPath, expr, type) {\n  if (type === \"none\") {\n    return null;\n  }\n\n  if (type === \"node-namespace\") {\n    return t.callExpression(programPath.hub.addHelper(\"interopRequireWildcard\"), [expr, t.booleanLiteral(true)]);\n  } else if (type === \"node-default\") {\n    return null;\n  }\n\n  let helper;\n\n  if (type === \"default\") {\n    helper = \"interopRequireDefault\";\n  } else if (type === \"namespace\") {\n    helper = \"interopRequireWildcard\";\n  } else {\n    throw new Error(`Unknown interop: ${type}`);\n  }\n\n  return t.callExpression(programPath.hub.addHelper(helper), [expr]);\n}\n\nfunction buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {\n  const statements = [];\n  let srcNamespace = t.identifier(sourceMetadata.name);\n  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);\n\n  for (const localName of sourceMetadata.importsNamespace) {\n    if (localName === sourceMetadata.name) continue;\n    statements.push(_template.default.statement`var NAME = SOURCE;`({\n      NAME: localName,\n      SOURCE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (constantReexports) {\n    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));\n  }\n\n  for (const exportName of sourceMetadata.reexportNamespace) {\n    statements.push((sourceMetadata.lazy ? _template.default.statement`\n            Object.defineProperty(EXPORTS, \"NAME\", {\n              enumerable: true,\n              get: function() {\n                return NAMESPACE;\n              }\n            });\n          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({\n      EXPORTS: metadata.exportName,\n      NAME: exportName,\n      NAMESPACE: t.cloneNode(srcNamespace)\n    }));\n  }\n\n  if (sourceMetadata.reexportAll) {\n    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), constantReexports);\n    statement.loc = sourceMetadata.reexportAll.loc;\n    statements.push(statement);\n  }\n\n  return statements;\n}\n\nconst ReexportTemplate = {\n  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,\n  constantComputed: _template.default.statement`EXPORTS[\"EXPORT_NAME\"] = NAMESPACE_IMPORT;`,\n  spec: (0, _template.default)`\n    Object.defineProperty(EXPORTS, \"EXPORT_NAME\", {\n      enumerable: true,\n      get: function() {\n        return NAMESPACE_IMPORT;\n      },\n    });\n    `\n};\n\nconst buildReexportsFromMeta = (meta, metadata, constantReexports) => {\n  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);\n  const {\n    stringSpecifiers\n  } = meta;\n  return Array.from(metadata.reexports, ([exportName, importName]) => {\n    let NAMESPACE_IMPORT = t.cloneNode(namespace);\n\n    if (importName === \"default\" && metadata.interop === \"node-default\") {} else if (stringSpecifiers.has(importName)) {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.stringLiteral(importName), true);\n    } else {\n      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.identifier(importName));\n    }\n\n    const astNodes = {\n      EXPORTS: meta.exportName,\n      EXPORT_NAME: exportName,\n      NAMESPACE_IMPORT\n    };\n\n    if (constantReexports || t.isIdentifier(NAMESPACE_IMPORT)) {\n      if (stringSpecifiers.has(exportName)) {\n        return ReexportTemplate.constantComputed(astNodes);\n      } else {\n        return ReexportTemplate.constant(astNodes);\n      }\n    } else {\n      return ReexportTemplate.spec(astNodes);\n    }\n  });\n};\n\nfunction buildESModuleHeader(metadata, enumerableModuleMeta = false) {\n  return (enumerableModuleMeta ? _template.default.statement`\n        EXPORTS.__esModule = true;\n      ` : _template.default.statement`\n        Object.defineProperty(EXPORTS, \"__esModule\", {\n          value: true,\n        });\n      `)({\n    EXPORTS: metadata.exportName\n  });\n}\n\nfunction buildNamespaceReexport(metadata, namespace, constantReexports) {\n  return (constantReexports ? _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          EXPORTS[key] = NAMESPACE[key];\n        });\n      ` : _template.default.statement`\n        Object.keys(NAMESPACE).forEach(function(key) {\n          if (key === \"default\" || key === \"__esModule\") return;\n          VERIFY_NAME_LIST;\n          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;\n\n          Object.defineProperty(EXPORTS, key, {\n            enumerable: true,\n            get: function() {\n              return NAMESPACE[key];\n            },\n          });\n        });\n    `)({\n    NAMESPACE: namespace,\n    EXPORTS: metadata.exportName,\n    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`\n            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;\n          `({\n      EXPORTS_LIST: metadata.exportNameListName\n    }) : null\n  });\n}\n\nfunction buildExportNameListDeclaration(programPath, metadata) {\n  const exportedVars = Object.create(null);\n\n  for (const data of metadata.local.values()) {\n    for (const name of data.names) {\n      exportedVars[name] = true;\n    }\n  }\n\n  let hasReexport = false;\n\n  for (const data of metadata.source.values()) {\n    for (const exportName of data.reexports.keys()) {\n      exportedVars[exportName] = true;\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportedVars[exportName] = true;\n    }\n\n    hasReexport = hasReexport || !!data.reexportAll;\n  }\n\n  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;\n  const name = programPath.scope.generateUidIdentifier(\"exportNames\");\n  delete exportedVars.default;\n  return {\n    name: name.name,\n    statement: t.variableDeclaration(\"var\", [t.variableDeclarator(name, t.valueToNode(exportedVars))])\n  };\n}\n\nfunction buildExportInitializationStatements(programPath, metadata, constantReexports = false) {\n  const initStatements = [];\n  const exportNames = [];\n\n  for (const [localName, data] of metadata.local) {\n    if (data.kind === \"import\") {} else if (data.kind === \"hoisted\") {\n      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));\n    } else {\n      exportNames.push(...data.names);\n    }\n  }\n\n  for (const data of metadata.source.values()) {\n    if (!constantReexports) {\n      initStatements.push(...buildReexportsFromMeta(metadata, data, false));\n    }\n\n    for (const exportName of data.reexportNamespace) {\n      exportNames.push(exportName);\n    }\n  }\n\n  initStatements.push(...chunk(exportNames, 100).map(members => {\n    return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());\n  }));\n  return initStatements;\n}\n\nconst InitTemplate = {\n  computed: _template.default.expression`EXPORTS[\"NAME\"] = VALUE`,\n  default: _template.default.expression`EXPORTS.NAME = VALUE`\n};\n\nfunction buildInitStatement(metadata, exportNames, initExpr) {\n  const {\n    stringSpecifiers,\n    exportName: EXPORTS\n  } = metadata;\n  return t.expressionStatement(exportNames.reduce((acc, exportName) => {\n    const params = {\n      EXPORTS,\n      NAME: exportName,\n      VALUE: acc\n    };\n\n    if (stringSpecifiers.has(exportName)) {\n      return InitTemplate.computed(params);\n    } else {\n      return InitTemplate.default(params);\n    }\n  }, initExpr));\n}\n\nfunction chunk(array, size) {\n  const chunks = [];\n\n  for (let i = 0; i < array.length; i += size) {\n    chunks.push(array.slice(i, i + size));\n  }\n\n  return chunks;\n}"]},"metadata":{},"sourceType":"script"}