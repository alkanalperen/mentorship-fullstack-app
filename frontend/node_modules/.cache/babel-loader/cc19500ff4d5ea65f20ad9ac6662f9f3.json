{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFileSync = transformFileSync;\nexports.transformFileAsync = transformFileAsync;\nexports.transformFile = void 0;\n\nconst transformFile = function transformFile(filename, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n  }\n\n  callback(new Error(\"Transforming files is not supported in browsers\"), null);\n};\n\nexports.transformFile = transformFile;\n\nfunction transformFileSync() {\n  throw new Error(\"Transforming files is not supported in browsers\");\n}\n\nfunction transformFileAsync() {\n  return Promise.reject(new Error(\"Transforming files is not supported in browsers\"));\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/transform-file-browser.js"],"names":["Object","defineProperty","exports","value","transformFileSync","transformFileAsync","transformFile","filename","opts","callback","Error","Promise","reject"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,kBAAR,GAA6BA,kBAA7B;AACAH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAA7B;;AAEA,MAAMA,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiD;AACrE,MAAI,OAAOD,IAAP,KAAgB,UAApB,EAAgC;AAC9BC,IAAAA,QAAQ,GAAGD,IAAX;AACD;;AAEDC,EAAAA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,iDAAV,CAAD,EAA+D,IAA/D,CAAR;AACD,CAND;;AAQAR,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AAEA,SAASF,iBAAT,GAA6B;AAC3B,QAAM,IAAIM,KAAJ,CAAU,iDAAV,CAAN;AACD;;AAED,SAASL,kBAAT,GAA8B;AAC5B,SAAOM,OAAO,CAACC,MAAR,CAAe,IAAIF,KAAJ,CAAU,iDAAV,CAAf,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFileSync = transformFileSync;\nexports.transformFileAsync = transformFileAsync;\nexports.transformFile = void 0;\n\nconst transformFile = function transformFile(filename, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n  }\n\n  callback(new Error(\"Transforming files is not supported in browsers\"), null);\n};\n\nexports.transformFile = transformFile;\n\nfunction transformFileSync() {\n  throw new Error(\"Transforming files is not supported in browsers\");\n}\n\nfunction transformFileAsync() {\n  return Promise.reject(new Error(\"Transforming files is not supported in browsers\"));\n}"]},"metadata":{},"sourceType":"script"}