{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._scope = null;\n    this._hub = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(t.importDeclaration([], t.stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(t.expressionStatement(t.callExpression(t.identifier(\"require\"), [t.stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importNamespaceSpecifier(local)];\n    this._resultName = t.cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    name = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importDefaultSpecifier(name)];\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n    name = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importSpecifier(name, t.identifier(importName))];\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  var(name) {\n    name = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = t.expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = t.variableDeclaration(\"var\", [t.variableDeclarator(name, statement.expression)]);\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = t.callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = t.callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = t.memberExpression(statement.expression, t.identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = t.memberExpression(statement.declarations[0].init, t.identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = t.memberExpression(this._resultName, t.identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/helper-module-imports/lib/import-builder.js"],"names":["Object","defineProperty","exports","value","default","_assert","require","t","ImportBuilder","constructor","importedSource","scope","hub","_statements","_resultName","_scope","_hub","_importedSource","done","statements","resultName","import","push","importDeclaration","stringLiteral","expressionStatement","callExpression","identifier","namespace","name","local","generateUidIdentifier","statement","length","type","specifiers","importNamespaceSpecifier","cloneNode","importDefaultSpecifier","named","importName","importSpecifier","var","variableDeclaration","variableDeclarator","expression","defaultInterop","_interop","addHelper","wildcardInterop","callee","declarations","init","fail","prop","memberExpression","read"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEA,IAAIC,CAAC,GAAGD,OAAO,CAAC,cAAD,CAAf;;AAEA,MAAME,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AACtC,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,eAAL,GAAuB,KAAK,CAA5B;AACA,SAAKF,MAAL,GAAcJ,KAAd;AACA,SAAKK,IAAL,GAAYJ,GAAZ;AACA,SAAKK,eAAL,GAAuBP,cAAvB;AACD;;AAEDQ,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,UAAU,EAAE,KAAKN,WADZ;AAELO,MAAAA,UAAU,EAAE,KAAKN;AAFZ,KAAP;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACP,SAAKR,WAAL,CAAiBS,IAAjB,CAAsBf,CAAC,CAACgB,iBAAF,CAAoB,EAApB,EAAwBhB,CAAC,CAACiB,aAAF,CAAgB,KAAKP,eAArB,CAAxB,CAAtB;;AAEA,WAAO,IAAP;AACD;;AAEDX,EAAAA,OAAO,GAAG;AACR,SAAKO,WAAL,CAAiBS,IAAjB,CAAsBf,CAAC,CAACkB,mBAAF,CAAsBlB,CAAC,CAACmB,cAAF,CAAiBnB,CAAC,CAACoB,UAAF,CAAa,SAAb,CAAjB,EAA0C,CAACpB,CAAC,CAACiB,aAAF,CAAgB,KAAKP,eAArB,CAAD,CAA1C,CAAtB,CAAtB;;AAEA,WAAO,IAAP;AACD;;AAEDW,EAAAA,SAAS,CAACC,IAAI,GAAG,WAAR,EAAqB;AAC5B,UAAMC,KAAK,GAAG,KAAKf,MAAL,CAAYgB,qBAAZ,CAAkCF,IAAlC,CAAd;;AAEA,UAAMG,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAlB;;AAEA5B,IAAAA,OAAO,CAAC2B,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;AAEA7B,IAAAA,OAAO,CAAC2B,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;AAEAD,IAAAA,SAAS,CAACG,UAAV,GAAuB,CAAC5B,CAAC,CAAC6B,wBAAF,CAA2BN,KAA3B,CAAD,CAAvB;AACA,SAAKhB,WAAL,GAAmBP,CAAC,CAAC8B,SAAF,CAAYP,KAAZ,CAAnB;AACA,WAAO,IAAP;AACD;;AAED1B,EAAAA,OAAO,CAACyB,IAAD,EAAO;AACZA,IAAAA,IAAI,GAAG,KAAKd,MAAL,CAAYgB,qBAAZ,CAAkCF,IAAlC,CAAP;AACA,UAAMG,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAlB;;AAEA5B,IAAAA,OAAO,CAAC2B,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;AAEA7B,IAAAA,OAAO,CAAC2B,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;AAEAD,IAAAA,SAAS,CAACG,UAAV,GAAuB,CAAC5B,CAAC,CAAC+B,sBAAF,CAAyBT,IAAzB,CAAD,CAAvB;AACA,SAAKf,WAAL,GAAmBP,CAAC,CAAC8B,SAAF,CAAYR,IAAZ,CAAnB;AACA,WAAO,IAAP;AACD;;AAEDU,EAAAA,KAAK,CAACV,IAAD,EAAOW,UAAP,EAAmB;AACtB,QAAIA,UAAU,KAAK,SAAnB,EAA8B,OAAO,KAAKpC,OAAL,CAAayB,IAAb,CAAP;AAC9BA,IAAAA,IAAI,GAAG,KAAKd,MAAL,CAAYgB,qBAAZ,CAAkCF,IAAlC,CAAP;AACA,UAAMG,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAlB;;AAEA5B,IAAAA,OAAO,CAAC2B,SAAS,CAACE,IAAV,KAAmB,mBAApB,CAAP;;AAEA7B,IAAAA,OAAO,CAAC2B,SAAS,CAACG,UAAV,CAAqBF,MAArB,KAAgC,CAAjC,CAAP;;AAEAD,IAAAA,SAAS,CAACG,UAAV,GAAuB,CAAC5B,CAAC,CAACkC,eAAF,CAAkBZ,IAAlB,EAAwBtB,CAAC,CAACoB,UAAF,CAAaa,UAAb,CAAxB,CAAD,CAAvB;AACA,SAAK1B,WAAL,GAAmBP,CAAC,CAAC8B,SAAF,CAAYR,IAAZ,CAAnB;AACA,WAAO,IAAP;AACD;;AAEDa,EAAAA,GAAG,CAACb,IAAD,EAAO;AACRA,IAAAA,IAAI,GAAG,KAAKd,MAAL,CAAYgB,qBAAZ,CAAkCF,IAAlC,CAAP;AACA,QAAIG,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAhB;;AAEA,QAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;AAC5C7B,MAAAA,OAAO,CAAC,KAAKS,WAAN,CAAP;;AAEAkB,MAAAA,SAAS,GAAGzB,CAAC,CAACkB,mBAAF,CAAsB,KAAKX,WAA3B,CAAZ;;AAEA,WAAKD,WAAL,CAAiBS,IAAjB,CAAsBU,SAAtB;AACD;;AAED,SAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,IAAgD1B,CAAC,CAACoC,mBAAF,CAAsB,KAAtB,EAA6B,CAACpC,CAAC,CAACqC,kBAAF,CAAqBf,IAArB,EAA2BG,SAAS,CAACa,UAArC,CAAD,CAA7B,CAAhD;AACA,SAAK/B,WAAL,GAAmBP,CAAC,CAAC8B,SAAF,CAAYR,IAAZ,CAAnB;AACA,WAAO,IAAP;AACD;;AAEDiB,EAAAA,cAAc,GAAG;AACf,WAAO,KAAKC,QAAL,CAAc,KAAK/B,IAAL,CAAUgC,SAAV,CAAoB,uBAApB,CAAd,CAAP;AACD;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKF,QAAL,CAAc,KAAK/B,IAAL,CAAUgC,SAAV,CAAoB,wBAApB,CAAd,CAAP;AACD;;AAEDD,EAAAA,QAAQ,CAACG,MAAD,EAAS;AACf,UAAMlB,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAlB;;AAEA,QAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;AAC5CF,MAAAA,SAAS,CAACa,UAAV,GAAuBtC,CAAC,CAACmB,cAAF,CAAiBwB,MAAjB,EAAyB,CAAClB,SAAS,CAACa,UAAX,CAAzB,CAAvB;AACD,KAFD,MAEO,IAAIb,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;AACnD7B,MAAAA,OAAO,CAAC2B,SAAS,CAACmB,YAAV,CAAuBlB,MAAvB,KAAkC,CAAnC,CAAP;;AAEAD,MAAAA,SAAS,CAACmB,YAAV,CAAuB,CAAvB,EAA0BC,IAA1B,GAAiC7C,CAAC,CAACmB,cAAF,CAAiBwB,MAAjB,EAAyB,CAAClB,SAAS,CAACmB,YAAV,CAAuB,CAAvB,EAA0BC,IAA3B,CAAzB,CAAjC;AACD,KAJM,MAIA;AACL/C,MAAAA,OAAO,CAACgD,IAAR,CAAa,kBAAb;AACD;;AAED,WAAO,IAAP;AACD;;AAEDC,EAAAA,IAAI,CAACzB,IAAD,EAAO;AACT,UAAMG,SAAS,GAAG,KAAKnB,WAAL,CAAiB,KAAKA,WAAL,CAAiBoB,MAAjB,GAA0B,CAA3C,CAAlB;;AAEA,QAAID,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;AAC5CF,MAAAA,SAAS,CAACa,UAAV,GAAuBtC,CAAC,CAACgD,gBAAF,CAAmBvB,SAAS,CAACa,UAA7B,EAAyCtC,CAAC,CAACoB,UAAF,CAAaE,IAAb,CAAzC,CAAvB;AACD,KAFD,MAEO,IAAIG,SAAS,CAACE,IAAV,KAAmB,qBAAvB,EAA8C;AACnD7B,MAAAA,OAAO,CAAC2B,SAAS,CAACmB,YAAV,CAAuBlB,MAAvB,KAAkC,CAAnC,CAAP;;AAEAD,MAAAA,SAAS,CAACmB,YAAV,CAAuB,CAAvB,EAA0BC,IAA1B,GAAiC7C,CAAC,CAACgD,gBAAF,CAAmBvB,SAAS,CAACmB,YAAV,CAAuB,CAAvB,EAA0BC,IAA7C,EAAmD7C,CAAC,CAACoB,UAAF,CAAaE,IAAb,CAAnD,CAAjC;AACD,KAJM,MAIA;AACLxB,MAAAA,OAAO,CAACgD,IAAR,CAAa,qBAAqBrB,SAAS,CAACE,IAA5C;AACD;;AAED,WAAO,IAAP;AACD;;AAEDsB,EAAAA,IAAI,CAAC3B,IAAD,EAAO;AACT,SAAKf,WAAL,GAAmBP,CAAC,CAACgD,gBAAF,CAAmB,KAAKzC,WAAxB,EAAqCP,CAAC,CAACoB,UAAF,CAAaE,IAAb,CAArC,CAAnB;AACD;;AAnIiB;;AAuIpB3B,OAAO,CAACE,OAAR,GAAkBI,aAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._scope = null;\n    this._hub = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(t.importDeclaration([], t.stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(t.expressionStatement(t.callExpression(t.identifier(\"require\"), [t.stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importNamespaceSpecifier(local)];\n    this._resultName = t.cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    name = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importDefaultSpecifier(name)];\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n    name = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [t.importSpecifier(name, t.identifier(importName))];\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  var(name) {\n    name = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = t.expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = t.variableDeclaration(\"var\", [t.variableDeclarator(name, statement.expression)]);\n    this._resultName = t.cloneNode(name);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = t.callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = t.callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = t.memberExpression(statement.expression, t.identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = t.memberExpression(statement.declarations[0].init, t.identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = t.memberExpression(this._resultName, t.identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;"]},"metadata":{},"sourceType":"script"}