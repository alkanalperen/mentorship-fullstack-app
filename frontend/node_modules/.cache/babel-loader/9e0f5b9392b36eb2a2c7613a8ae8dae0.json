{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseAsync = exports.parseSync = exports.parse = void 0;\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _normalizeOpts = _interopRequireDefault(require(\"./transformation/normalize-opts\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst parseRunner = (0, _gensync().default)(function* parse(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* (0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code);\n});\n\nconst parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) return parseRunner.sync(code, opts);\n  parseRunner.errback(code, opts, callback);\n};\n\nexports.parse = parse;\nconst parseSync = parseRunner.sync;\nexports.parseSync = parseSync;\nconst parseAsync = parseRunner.async;\nexports.parseAsync = parseAsync;","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/parse.js"],"names":["Object","defineProperty","exports","value","parseAsync","parseSync","parse","_gensync","data","_interopRequireDefault","require","_config","_parser","_normalizeOpts","obj","__esModule","default","parseRunner","code","opts","config","passes","callback","undefined","sync","errback","async"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACI,KAAR,GAAgB,KAAK,CAA9D;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC;;AAEAH,EAAAA,QAAQ,GAAG,YAAY;AACrB,WAAOC,IAAP;AACD,GAFD;;AAIA,SAAOA,IAAP;AACD;;AAED,IAAIG,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIG,cAAc,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAA3C;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,MAAMG,WAAW,GAAG,CAAC,GAAGV,QAAQ,GAAGS,OAAf,EAAwB,UAAUV,KAAV,CAAgBY,IAAhB,EAAsBC,IAAtB,EAA4B;AACtE,QAAMC,MAAM,GAAG,OAAO,CAAC,GAAGT,OAAO,CAACK,OAAZ,EAAqBG,IAArB,CAAtB;;AAEA,MAAIC,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,IAAP;AACD;;AAED,SAAO,OAAO,CAAC,GAAGR,OAAO,CAACI,OAAZ,EAAqBI,MAAM,CAACC,MAA5B,EAAoC,CAAC,GAAGR,cAAc,CAACG,OAAnB,EAA4BI,MAA5B,CAApC,EAAyEF,IAAzE,CAAd;AACD,CARmB,CAApB;;AAUA,MAAMZ,KAAK,GAAG,SAASA,KAAT,CAAeY,IAAf,EAAqBC,IAArB,EAA2BG,QAA3B,EAAqC;AACjD,MAAI,OAAOH,IAAP,KAAgB,UAApB,EAAgC;AAC9BG,IAAAA,QAAQ,GAAGH,IAAX;AACAA,IAAAA,IAAI,GAAGI,SAAP;AACD;;AAED,MAAID,QAAQ,KAAKC,SAAjB,EAA4B,OAAON,WAAW,CAACO,IAAZ,CAAiBN,IAAjB,EAAuBC,IAAvB,CAAP;AAC5BF,EAAAA,WAAW,CAACQ,OAAZ,CAAoBP,IAApB,EAA0BC,IAA1B,EAAgCG,QAAhC;AACD,CARD;;AAUApB,OAAO,CAACI,KAAR,GAAgBA,KAAhB;AACA,MAAMD,SAAS,GAAGY,WAAW,CAACO,IAA9B;AACAtB,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACA,MAAMD,UAAU,GAAGa,WAAW,CAACS,KAA/B;AACAxB,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseAsync = exports.parseSync = exports.parse = void 0;\n\nfunction _gensync() {\n  const data = _interopRequireDefault(require(\"gensync\"));\n\n  _gensync = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _parser = _interopRequireDefault(require(\"./parser\"));\n\nvar _normalizeOpts = _interopRequireDefault(require(\"./transformation/normalize-opts\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst parseRunner = (0, _gensync().default)(function* parse(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n\n  if (config === null) {\n    return null;\n  }\n\n  return yield* (0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code);\n});\n\nconst parse = function parse(code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) return parseRunner.sync(code, opts);\n  parseRunner.errback(code, opts, callback);\n};\n\nexports.parse = parse;\nconst parseSync = parseRunner.sync;\nexports.parseSync = parseSync;\nconst parseAsync = parseRunner.async;\nexports.parseAsync = parseAsync;"]},"metadata":{},"sourceType":"script"}