{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/template/lib/builder.js"],"names":["Object","defineProperty","exports","value","default","createTemplateBuilder","_options","require","_string","_literal","NO_PLACEHOLDER","validate","placeholderPattern","formatter","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","assign","tpl","args","length","Error","extendedTrace","merge","Array","isArray","builder","get","set","ast","fn","rootStack","error","stack","split","slice","join","arg","err"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}"]},"metadata":{},"sourceType":"script"}