{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.minVersion = minVersion;\nexports.getDependencies = getDependencies;\nexports.ensure = ensure;\nexports.default = exports.list = void 0;\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar t = require(\"@babel/types\");\n\nvar _helpers = require(\"./helpers\");\n\nfunction makePath(path) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet fileClass = undefined;\n\nfunction getHelperMetadata(file) {\n  const globals = new Set();\n  const localBindingNames = new Set();\n  const dependencies = new Map();\n  let exportName;\n  let exportPath;\n  const exportBindingAssignments = [];\n  const importPaths = [];\n  const importBindingsReferences = [];\n  const dependencyVisitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n\n      if (!_helpers.default[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n\n      if (child.get(\"specifiers\").length !== 1 || !child.get(\"specifiers.0\").isImportDefaultSpecifier()) {\n        throw child.buildCodeFrameError(\"Helpers can only import a default value\");\n      }\n\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (decl.isFunctionDeclaration()) {\n        if (!decl.node.id) {\n          throw decl.buildCodeFrameError(\"Helpers should give names to their exported func declaration\");\n        }\n\n        exportName = decl.node.id.name;\n      }\n\n      exportPath = makePath(child);\n    },\n\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    Statement(child) {\n      if (child.isModuleDeclaration()) return;\n      child.skip();\n    }\n\n  };\n  const referenceVisitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n        localBindingNames.add(name);\n      });\n    },\n\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name, true);\n\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding != null && binding.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    }\n\n  };\n  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);\n  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);\n  if (!exportPath) throw new Error(\"Helpers must default-export something.\");\n  exportBindingAssignments.reverse();\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  };\n}\n\nfunction permuteHelperAST(file, metadata, id, localBindings, getDependency) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  } = metadata;\n  const dependenciesRefs = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] = typeof getDependency === \"function\" && getDependency(name) || id;\n  });\n  const toRename = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const visitor = {\n    Program(path) {\n      const exp = path.get(exportPath);\n      const imps = importPaths.map(p => path.get(p));\n      const impsBindingRefs = importBindingsReferences.map(p => path.get(p));\n      const decl = exp.get(\"declaration\");\n\n      if (id.type === \"Identifier\") {\n        if (decl.isFunctionDeclaration()) {\n          exp.replaceWith(decl);\n        } else {\n          exp.replaceWith(t.variableDeclaration(\"var\", [t.variableDeclarator(id, decl.node)]));\n        }\n      } else if (id.type === \"MemberExpression\") {\n        if (decl.isFunctionDeclaration()) {\n          exportBindingAssignments.forEach(assignPath => {\n            const assign = path.get(assignPath);\n            assign.replaceWith(t.assignmentExpression(\"=\", id, assign.node));\n          });\n          exp.replaceWith(decl);\n          path.pushContainer(\"body\", t.expressionStatement(t.assignmentExpression(\"=\", id, t.identifier(exportName))));\n        } else {\n          exp.replaceWith(t.expressionStatement(t.assignmentExpression(\"=\", id, decl.node)));\n        }\n      } else {\n        throw new Error(\"Unexpected helper format.\");\n      }\n\n      Object.keys(toRename).forEach(name => {\n        path.scope.rename(name, toRename[name]);\n      });\n\n      for (const path of imps) path.remove();\n\n      for (const path of impsBindingRefs) {\n        const node = t.cloneNode(dependenciesRefs[path.node.name]);\n        path.replaceWith(node);\n      }\n\n      path.stop();\n    }\n\n  };\n  (0, _traverse.default)(file.ast, visitor, file.scope);\n}\n\nconst helperData = Object.create(null);\n\nfunction loadHelper(name) {\n  if (!helperData[name]) {\n    const helper = _helpers.default[name];\n\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name\n      });\n    }\n\n    const fn = () => {\n      const file = {\n        ast: t.file(helper.ast())\n      };\n\n      if (fileClass) {\n        return new fileClass({\n          filename: `babel-helper://${name}`\n        }, file);\n      }\n\n      return file;\n    };\n\n    const metadata = getHelperMetadata(fn());\n    helperData[name] = {\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals\n        };\n      },\n\n      minVersion() {\n        return helper.minVersion;\n      },\n\n      dependencies: metadata.dependencies\n    };\n  }\n\n  return helperData[name];\n}\n\nfunction get(name, getDependency, id, localBindings) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nfunction minVersion(name) {\n  return loadHelper(name).minVersion();\n}\n\nfunction getDependencies(name) {\n  return Array.from(loadHelper(name).dependencies.values());\n}\n\nfunction ensure(name, newFileClass) {\n  if (!fileClass) {\n    fileClass = newFileClass;\n  }\n\n  loadHelper(name);\n}\n\nconst list = Object.keys(_helpers.default).map(name => name.replace(/^_/, \"\")).filter(name => name !== \"__esModule\");\nexports.list = list;\nvar _default = get;\nexports.default = _default;","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/helpers/lib/index.js"],"names":["Object","defineProperty","exports","value","get","minVersion","getDependencies","ensure","default","list","_traverse","require","t","_helpers","makePath","path","parts","parentPath","push","key","inList","listKey","reverse","join","fileClass","undefined","getHelperMetadata","file","globals","Set","localBindingNames","dependencies","Map","exportName","exportPath","exportBindingAssignments","importPaths","importBindingsReferences","dependencyVisitor","ImportDeclaration","child","name","node","source","buildCodeFrameError","length","isImportDefaultSpecifier","bindingIdentifier","specifiers","local","set","ExportDefaultDeclaration","decl","isFunctionDeclaration","id","ExportAllDeclaration","ExportNamedDeclaration","Statement","isModuleDeclaration","skip","referenceVisitor","Program","bindings","scope","getAllBindings","keys","forEach","has","identifier","add","ReferencedIdentifier","binding","getBinding","AssignmentExpression","left","getBindingIdentifiers","isIdentifier","isProgram","ast","Error","Array","from","permuteHelperAST","metadata","localBindings","getDependency","dependenciesRefs","toRename","newName","type","visitor","exp","imps","map","p","impsBindingRefs","replaceWith","variableDeclaration","variableDeclarator","assignPath","assign","assignmentExpression","pushContainer","expressionStatement","rename","remove","cloneNode","stop","helperData","create","loadHelper","helper","ReferenceError","code","fn","filename","build","nodes","program","body","values","newFileClass","replace","filter","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.minVersion = minVersion;\nexports.getDependencies = getDependencies;\nexports.ensure = ensure;\nexports.default = exports.list = void 0;\n\nvar _traverse = require(\"@babel/traverse\");\n\nvar t = require(\"@babel/types\");\n\nvar _helpers = require(\"./helpers\");\n\nfunction makePath(path) {\n  const parts = [];\n\n  for (; path.parentPath; path = path.parentPath) {\n    parts.push(path.key);\n    if (path.inList) parts.push(path.listKey);\n  }\n\n  return parts.reverse().join(\".\");\n}\n\nlet fileClass = undefined;\n\nfunction getHelperMetadata(file) {\n  const globals = new Set();\n  const localBindingNames = new Set();\n  const dependencies = new Map();\n  let exportName;\n  let exportPath;\n  const exportBindingAssignments = [];\n  const importPaths = [];\n  const importBindingsReferences = [];\n  const dependencyVisitor = {\n    ImportDeclaration(child) {\n      const name = child.node.source.value;\n\n      if (!_helpers.default[name]) {\n        throw child.buildCodeFrameError(`Unknown helper ${name}`);\n      }\n\n      if (child.get(\"specifiers\").length !== 1 || !child.get(\"specifiers.0\").isImportDefaultSpecifier()) {\n        throw child.buildCodeFrameError(\"Helpers can only import a default value\");\n      }\n\n      const bindingIdentifier = child.node.specifiers[0].local;\n      dependencies.set(bindingIdentifier, name);\n      importPaths.push(makePath(child));\n    },\n\n    ExportDefaultDeclaration(child) {\n      const decl = child.get(\"declaration\");\n\n      if (decl.isFunctionDeclaration()) {\n        if (!decl.node.id) {\n          throw decl.buildCodeFrameError(\"Helpers should give names to their exported func declaration\");\n        }\n\n        exportName = decl.node.id.name;\n      }\n\n      exportPath = makePath(child);\n    },\n\n    ExportAllDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    ExportNamedDeclaration(child) {\n      throw child.buildCodeFrameError(\"Helpers can only export default\");\n    },\n\n    Statement(child) {\n      if (child.isModuleDeclaration()) return;\n      child.skip();\n    }\n\n  };\n  const referenceVisitor = {\n    Program(path) {\n      const bindings = path.scope.getAllBindings();\n      Object.keys(bindings).forEach(name => {\n        if (name === exportName) return;\n        if (dependencies.has(bindings[name].identifier)) return;\n        localBindingNames.add(name);\n      });\n    },\n\n    ReferencedIdentifier(child) {\n      const name = child.node.name;\n      const binding = child.scope.getBinding(name, true);\n\n      if (!binding) {\n        globals.add(name);\n      } else if (dependencies.has(binding.identifier)) {\n        importBindingsReferences.push(makePath(child));\n      }\n    },\n\n    AssignmentExpression(child) {\n      const left = child.get(\"left\");\n      if (!(exportName in left.getBindingIdentifiers())) return;\n\n      if (!left.isIdentifier()) {\n        throw left.buildCodeFrameError(\"Only simple assignments to exports are allowed in helpers\");\n      }\n\n      const binding = child.scope.getBinding(exportName);\n\n      if (binding != null && binding.scope.path.isProgram()) {\n        exportBindingAssignments.push(makePath(child));\n      }\n    }\n\n  };\n  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);\n  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);\n  if (!exportPath) throw new Error(\"Helpers must default-export something.\");\n  exportBindingAssignments.reverse();\n  return {\n    globals: Array.from(globals),\n    localBindingNames: Array.from(localBindingNames),\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  };\n}\n\nfunction permuteHelperAST(file, metadata, id, localBindings, getDependency) {\n  if (localBindings && !id) {\n    throw new Error(\"Unexpected local bindings for module-based helpers.\");\n  }\n\n  if (!id) return;\n  const {\n    localBindingNames,\n    dependencies,\n    exportBindingAssignments,\n    exportPath,\n    exportName,\n    importBindingsReferences,\n    importPaths\n  } = metadata;\n  const dependenciesRefs = {};\n  dependencies.forEach((name, id) => {\n    dependenciesRefs[id.name] = typeof getDependency === \"function\" && getDependency(name) || id;\n  });\n  const toRename = {};\n  const bindings = new Set(localBindings || []);\n  localBindingNames.forEach(name => {\n    let newName = name;\n\n    while (bindings.has(newName)) newName = \"_\" + newName;\n\n    if (newName !== name) toRename[name] = newName;\n  });\n\n  if (id.type === \"Identifier\" && exportName !== id.name) {\n    toRename[exportName] = id.name;\n  }\n\n  const visitor = {\n    Program(path) {\n      const exp = path.get(exportPath);\n      const imps = importPaths.map(p => path.get(p));\n      const impsBindingRefs = importBindingsReferences.map(p => path.get(p));\n      const decl = exp.get(\"declaration\");\n\n      if (id.type === \"Identifier\") {\n        if (decl.isFunctionDeclaration()) {\n          exp.replaceWith(decl);\n        } else {\n          exp.replaceWith(t.variableDeclaration(\"var\", [t.variableDeclarator(id, decl.node)]));\n        }\n      } else if (id.type === \"MemberExpression\") {\n        if (decl.isFunctionDeclaration()) {\n          exportBindingAssignments.forEach(assignPath => {\n            const assign = path.get(assignPath);\n            assign.replaceWith(t.assignmentExpression(\"=\", id, assign.node));\n          });\n          exp.replaceWith(decl);\n          path.pushContainer(\"body\", t.expressionStatement(t.assignmentExpression(\"=\", id, t.identifier(exportName))));\n        } else {\n          exp.replaceWith(t.expressionStatement(t.assignmentExpression(\"=\", id, decl.node)));\n        }\n      } else {\n        throw new Error(\"Unexpected helper format.\");\n      }\n\n      Object.keys(toRename).forEach(name => {\n        path.scope.rename(name, toRename[name]);\n      });\n\n      for (const path of imps) path.remove();\n\n      for (const path of impsBindingRefs) {\n        const node = t.cloneNode(dependenciesRefs[path.node.name]);\n        path.replaceWith(node);\n      }\n\n      path.stop();\n    }\n\n  };\n  (0, _traverse.default)(file.ast, visitor, file.scope);\n}\n\nconst helperData = Object.create(null);\n\nfunction loadHelper(name) {\n  if (!helperData[name]) {\n    const helper = _helpers.default[name];\n\n    if (!helper) {\n      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {\n        code: \"BABEL_HELPER_UNKNOWN\",\n        helper: name\n      });\n    }\n\n    const fn = () => {\n      const file = {\n        ast: t.file(helper.ast())\n      };\n\n      if (fileClass) {\n        return new fileClass({\n          filename: `babel-helper://${name}`\n        }, file);\n      }\n\n      return file;\n    };\n\n    const metadata = getHelperMetadata(fn());\n    helperData[name] = {\n      build(getDependency, id, localBindings) {\n        const file = fn();\n        permuteHelperAST(file, metadata, id, localBindings, getDependency);\n        return {\n          nodes: file.ast.program.body,\n          globals: metadata.globals\n        };\n      },\n\n      minVersion() {\n        return helper.minVersion;\n      },\n\n      dependencies: metadata.dependencies\n    };\n  }\n\n  return helperData[name];\n}\n\nfunction get(name, getDependency, id, localBindings) {\n  return loadHelper(name).build(getDependency, id, localBindings);\n}\n\nfunction minVersion(name) {\n  return loadHelper(name).minVersion();\n}\n\nfunction getDependencies(name) {\n  return Array.from(loadHelper(name).dependencies.values());\n}\n\nfunction ensure(name, newFileClass) {\n  if (!fileClass) {\n    fileClass = newFileClass;\n  }\n\n  loadHelper(name);\n}\n\nconst list = Object.keys(_helpers.default).map(name => name.replace(/^_/, \"\")).filter(name => name !== \"__esModule\");\nexports.list = list;\nvar _default = get;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}