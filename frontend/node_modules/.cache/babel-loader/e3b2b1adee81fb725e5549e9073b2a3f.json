{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/alperen.alkan/frontend/src/components/AdminTopicPanel.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormDialog from './FormDialog';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'col1',\n  headerName: 'Main Topic',\n  width: 200\n}, {\n  field: 'col2',\n  headerName: 'Sub Topics',\n  width: 500\n}];\nconst rows = [{\n  id: 1,\n  col1: \"Hello\",\n  col2: 'World'\n}, {\n  id: 2,\n  col1: 'XGrid',\n  col2: 'is Awesome'\n}, {\n  id: 3,\n  col1: 'Material-UI',\n  col2: 'is Amazing'\n}];\nexport default function AdminTopicPanel() {\n  _s();\n\n  const history = useHistory();\n  const [rows, setRows] = useState([{\n    id: 5,\n    col1: \"dsa\",\n    col2: \"dsa\"\n  }]);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"dsa\");\n  const [isFormSended, setForm] = useState(false);\n  const [state, setState] = useState(true);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  const [subTopic, setSubTopic] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('role') != 'admin') {\n      alert(\"you are not admin so you cannot go to the admin related pages\");\n      history.push('/dashboard');\n    }\n\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\", auth).then(response => {\n      setRows(response.data.map(topics => {\n        return {\n          id: topics.id,\n          col1: topics.title,\n          col2: topics.subTitle\n        };\n      }));\n    });\n    console.log(state);\n  }, [state]);\n\n  const deleteTopic = () => {\n    var credentials = localStorage.getItem('credentials');\n    axios.post(\"http://localhost:8080/api/topic/remove/\" + mainTopic, subTopic, {\n      headers: {\n        'Authorization': 'Basic ' + credentials,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(subTopic);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminTopicPanel\",\n    style: {\n      height: 600,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      onSelectionModelChange: id => setSelectedId(id) //setRowSelected(e.target.value)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n      stateChanger: setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: deleteTopic,\n      children: \"Delete  Topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Main Topic\",\n      onChange: e => setTopic(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      full: true,\n      width: true,\n      id: \"standard-basic\",\n      label: \"Sub Topic\",\n      onChange: e => setSubTopic(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AdminTopicPanel, \"rZUjRELZFyujPuhQjzTxfJLxrkc=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminTopicPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminTopicPanel\");","map":{"version":3,"sources":["/Users/alperenalkan/alperen.alkan/frontend/src/components/AdminTopicPanel.js"],"names":["axios","React","useState","useEffect","DataGrid","GridRowsProp","GridColDef","makeStyles","FormDialog","useHistory","columns","field","headerName","width","rows","id","col1","col2","AdminTopicPanel","history","setRows","open","setOpen","selectedValue","setSelectedValue","isFormSended","setForm","state","setState","selectedId","setSelectedId","topic","setTopic","subTopic","setSubTopic","handleClickOpen","handleClose","value","localStorage","getItem","alert","push","auth","JSON","parse","get","then","response","data","map","topics","title","subTitle","console","log","deleteTopic","credentials","post","mainTopic","headers","height","e","target"],"mappings":"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","sourcesContent":["  import axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid,GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormDialog from './FormDialog';\nimport { useHistory } from 'react-router';\n\n\nconst columns= [\n  { field: 'col1', headerName: 'Main Topic', width: 200 },\n  { field: 'col2', headerName: 'Sub Topics', width: 500 },\n];\nconst rows = [\n  { id: 1, col1: \"Hello\", col2: 'World' },\n  { id: 2, col1: 'XGrid', col2: 'is Awesome' },\n  { id: 3, col1: 'Material-UI', col2: 'is Amazing' },\n];\n\n\n\nexport default function AdminTopicPanel(){\n  const history = useHistory();\n  const [rows,setRows]=useState([{ id: 5, col1: \"dsa\", col2: \"dsa\" }]);\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"dsa\");\n  const [isFormSended,setForm] = useState(false);\n  const[state, setState]=useState(true);\n  const [selectedId,setSelectedId] = useState(\"\")\n  const [topic,setTopic] = useState(\"\");\n  const [subTopic,setSubTopic] = useState(\"\")\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n\nconst handleClose = (value) => {\n  setOpen(false);\n  setSelectedValue(value);\n};\n\n  useEffect(()  => {\n    if(localStorage.getItem('role')!= 'admin'){\n      alert(\"you are not admin so you cannot go to the admin related pages\")\n      history.push('/dashboard');\n    }\n\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\",auth).then(response => {\n        setRows(response.data.map(topics => {return{id: topics.id, col1: topics.title, col2:topics.subTitle }}));\n    });\n    console.log(state);\n  }, [state]);\n  \n  const deleteTopic = () => {\n    var credentials = localStorage.getItem('credentials');\n    axios.post(\"http://localhost:8080/api/topic/remove/\"+ mainTopic, subTopic,{\n      headers:{\n        'Authorization': 'Basic ' + credentials,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n    console.log(subTopic);\n     });\n};\n\n  return(\n      <div className=\"AdminTopicPanel\" style={{ height: 600, width: '100%' }}>\n        <DataGrid\n  rows={rows}\n  columns={columns}\n  pageSize={10}\n  onSelectionModelChange = {id => setSelectedId(id)}//setRowSelected(e.target.value)}\n/>\n<FormDialog  stateChanger = {setState} />\n\n<Button variant=\"contained\" color=\"primary\" onClick={deleteTopic}>\n          Delete  Topic\n</Button>\n<TextField id=\"standard-basic\" label=\"Main Topic\" onChange={e => setTopic(e.target.value)} />\n<TextField full width id=\"standard-basic\" label=\"Sub Topic\" onChange={e => setSubTopic(e.target.value)}/>\n\n\n            </div>\n\n      );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}