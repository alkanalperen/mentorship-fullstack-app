{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = require(\"source-map\");\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = void 0;\n    this._code = void 0;\n    this._opts = void 0;\n    this._rawMappings = void 0;\n    this._lastGenLine = void 0;\n    this._lastSourceLine = void 0;\n    this._lastSourceColumn = void 0;\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/generator/lib/source-map.js"],"names":["Object","defineProperty","exports","value","default","_sourceMap","require","SourceMap","constructor","opts","code","_cachedMap","_code","_opts","_rawMappings","_lastGenLine","_lastSourceLine","_lastSourceColumn","get","map","SourceMapGenerator","sourceRoot","setSourceContent","sourceFileName","replace","keys","forEach","mapping","addMapping","toJSON","getRawMappings","slice","mark","generatedLine","generatedColumn","line","column","identifierName","filename","force","push","name","undefined","generated","source","original"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sourceMap = require(\"source-map\");\n\nclass SourceMap {\n  constructor(opts, code) {\n    this._cachedMap = void 0;\n    this._code = void 0;\n    this._opts = void 0;\n    this._rawMappings = void 0;\n    this._lastGenLine = void 0;\n    this._lastSourceLine = void 0;\n    this._lastSourceColumn = void 0;\n    this._cachedMap = null;\n    this._code = code;\n    this._opts = opts;\n    this._rawMappings = [];\n  }\n\n  get() {\n    if (!this._cachedMap) {\n      const map = this._cachedMap = new _sourceMap.SourceMapGenerator({\n        sourceRoot: this._opts.sourceRoot\n      });\n      const code = this._code;\n\n      if (typeof code === \"string\") {\n        map.setSourceContent(this._opts.sourceFileName.replace(/\\\\/g, \"/\"), code);\n      } else if (typeof code === \"object\") {\n        Object.keys(code).forEach(sourceFileName => {\n          map.setSourceContent(sourceFileName.replace(/\\\\/g, \"/\"), code[sourceFileName]);\n        });\n      }\n\n      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);\n    }\n\n    return this._cachedMap.toJSON();\n  }\n\n  getRawMappings() {\n    return this._rawMappings.slice();\n  }\n\n  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {\n    if (this._lastGenLine !== generatedLine && line === null) return;\n\n    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {\n      return;\n    }\n\n    this._cachedMap = null;\n    this._lastGenLine = generatedLine;\n    this._lastSourceLine = line;\n    this._lastSourceColumn = column;\n\n    this._rawMappings.push({\n      name: identifierName || undefined,\n      generated: {\n        line: generatedLine,\n        column: generatedColumn\n      },\n      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\\\/g, \"/\"),\n      original: line == null ? undefined : {\n        line: line,\n        column: column\n      }\n    });\n  }\n\n}\n\nexports.default = SourceMap;"]},"metadata":{},"sourceType":"script"}