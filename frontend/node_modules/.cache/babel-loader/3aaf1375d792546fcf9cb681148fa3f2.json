{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/obss/frontend/frontend/src/components/Routes.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from './Login.js';\nimport AdminTopicPanel from './AdminTopicPanel.js';\nimport AdminDashboard from './AdminDashboard.js';\nimport UserDashboard from './UserDashboard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Routes() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/dashboard\",\n      component: Dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/AdminTopicPanel\",\n      component: AdminTopicPanel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/AdminTopicPanel\",\n      children: /*#__PURE__*/_jsxDEV(AdminTopicPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n\n  function Dashboard() {\n    var role = localStorage.getItem('role');\n\n    if (role == \"admin\") {\n      return /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/src/components/Routes.js"],"names":["BrowserRouter","Router","Switch","Route","Link","Login","AdminTopicPanel","AdminDashboard","UserDashboard","Routes","Dashboard","role","localStorage","getItem"],"mappings":";AAAA,SACIA,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKQ,kBALR;AAME,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEF,eAAe,SAASC,MAAT,GAAiB;AAC5B,sBACA,QAAC,MAAD;AAAA,4BACM,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,YAArB;AAAkC,MAAA,SAAS,EAAGC;AAA9C;AAAA;AAAA;AAAA;AAAA,YADN,eAEM,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,kBAArB;AAAwC,MAAA,SAAS,EAAGJ;AAApD;AAAA;AAAA;AAAA;AAAA,YAFN,eAGF,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,SAAS,EAAGD;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHE,eAKF,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,kBAAZ;AAAA,6BACA,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALE;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;;AAYJ,WAASK,SAAT,GAAqB;AACjB,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AAEA,QAAGF,IAAI,IAAE,OAAT,EAAiB;AACjB,0BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF;AAGC,KAJD,MAKI;AACH,0BACG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cADH;AAGA;AACF;AAEA;KA5BqBF,M","sourcesContent":["import {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  }from \"react-router-dom\";\n  import Login from './Login.js'\n  import AdminTopicPanel from './AdminTopicPanel.js'\n  import AdminDashboard from './AdminDashboard.js';\n  import UserDashboard from './UserDashboard.js';\n  \nexport default function Routes(){\n    return(\n    <Router >\n          <ProtectedRoute path=\"/dashboard\" component= {Dashboard} / >\n          <ProtectedRoute path=\"/AdminTopicPanel\" component= {AdminTopicPanel} / >\n  <ProtectedRoute path=\"/login\" component= {Login} / >\n \n  <Route path=\"/AdminTopicPanel\" >\n  <AdminTopicPanel />\n    </Route>\n  </Router>\n    );\n\nfunction Dashboard() {\n    var role = localStorage.getItem('role');\n    \n    if(role==\"admin\"){\n    return (\n      <AdminDashboard />\n    );\n    }\n    else{\n     return (   \n        <UserDashboard />\n     );\n    }\n  }\n  \n  }\n  "]},"metadata":{},"sourceType":"module"}