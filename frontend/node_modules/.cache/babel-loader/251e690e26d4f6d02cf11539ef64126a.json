{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/obss/frontend/frontend/src/components/ApplyToBeMentor.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApplyToBeMentor() {\n  _s();\n\n  const options = [{\n    label: \"Grapes 🍇\",\n    value: \"grapes\"\n  }];\n  const [selected, setSelected] = useState([]);\n  const initialValue = [{\n    id: 0,\n    title: \"dsa\",\n    subTitle: \"---SELECT-OPTION----\"\n  }];\n  const [stateOptions, setStateValues] = useState(initialValue);\n  const [optionsArr, setOptions] = useState(options);\n  const [titleId, setTitle] = useState(\"\");\n  const [thoughts, setThoughts] = useState(\"Please write your thoughts\");\n  const [subTArray, setSubT] = useState(initialValue);\n  useEffect(() => {\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.get(\"http://localhost:8080/api/topic\", auth).then(response => {\n      setStateValues(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (stateOptions.find(title => title.title === titleId) === undefined) {\n      console.log(\"undefined\");\n    } else {\n      setOptions(stateOptions.find(title => title.title === titleId).subTitle.map(response => {\n        return {\n          label: response,\n          value: response\n        };\n      }));\n    } // console.log(optionsArr)\n\n  }, [titleId]); //This will run only once  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    cnplassName: \"ApplyToBeMentor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"dsa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setTitle(e.target.value),\n      children: stateOptions.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: topic.title\n      }, topic.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelect, {\n      options: optionsArr,\n      value: selected,\n      onChange: e => console.log(e.target.value),\n      labelledBy: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \"dsa\",\n      onChange: e => setThoughts(e.value.target)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApplyToBeMentor, \"KiU4q4/XvmMUm6nrWNTuXIULX3o=\");\n\n_c = ApplyToBeMentor;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyToBeMentor\");","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/src/components/ApplyToBeMentor.js"],"names":["axios","React","useState","useEffect","MultiSelect","ApplyToBeMentor","options","label","value","selected","setSelected","initialValue","id","title","subTitle","stateOptions","setStateValues","optionsArr","setOptions","titleId","setTitle","thoughts","setThoughts","subTArray","setSubT","auth","JSON","parse","localStorage","getItem","get","then","response","data","console","log","find","undefined","map","e","target","topic"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport MultiSelect from \"react-multi-select-component\";\n\n\n\nexport default function ApplyToBeMentor(){\n    const options = [\n        { label: \"Grapes 🍇\", value: \"grapes\" },\n\n      ];\n      const [selected, setSelected] = useState([]);\n\n    const initialValue = [\n        { id: 0,title:\"dsa\", subTitle: \"---SELECT-OPTION----\" }];\n        const [stateOptions, setStateValues] = useState(initialValue);\n    const [optionsArr, setOptions] = useState(options);\n    const [titleId, setTitle] = useState(\"\");\n    const [thoughts, setThoughts] = useState(\"Please write your thoughts\")\n    const [subTArray,setSubT] = useState(initialValue);\n\n   \n    useEffect(()  => {\n        var auth = JSON.parse(localStorage.getItem('auth'));\n\n       axios.get(\"http://localhost:8080/api/topic\",auth).then(response => {\n                setStateValues(response.data);\n                console.log(response.data)\n\n          }\n        );    }, []);\n    useEffect(()  => {\n        if(stateOptions.find(title => title.title === titleId) === undefined)\n        {\n            console.log(\"undefined\");\n        }else{\n         setOptions(stateOptions.find(title => title.title === titleId).subTitle.map( (response) => {\n             return {label : response, value: response}}))\n             }    // console.log(optionsArr)\n                }, [titleId]); //This will run only once  \n    \n    return(\n        <div cnplassName=\"ApplyToBeMentor\">\n            <h1>dsa</h1>\n            <select onChange={(e) => setTitle(e.target.value)}>\n                {stateOptions.map(topic => <option key = {topic.id}>{topic.title}</option> )}\n            </select> \n            <MultiSelect\n        options={optionsArr}\n        value={selected}\n        onChange={(e) => console.log(e.target.value)}\n        labelledBy=\"Select\"\n      />\n      <input type =\"text\" value={\"dsa\"} onChange = { (e) => setThoughts(e.value.target)} />\n        </div>\n        );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}