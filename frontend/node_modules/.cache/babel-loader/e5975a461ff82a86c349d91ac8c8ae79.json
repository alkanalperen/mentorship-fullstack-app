{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createUncachedDescriptors = createUncachedDescriptors;\nexports.createDescriptor = createDescriptor;\n\nvar _files = require(\"./files\");\n\nvar _item = require(\"./item\");\n\nvar _caching = require(\"./caching\");\n\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\n\nfunction createCachedDescriptors(dirname, options, alias) {\n  const {\n    plugins,\n    presets,\n    passPerPreset\n  } = options;\n  return {\n    options,\n    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => [],\n    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => []\n  };\n}\n\nfunction createUncachedDescriptors(dirname, options, alias) {\n  let plugins;\n  let presets;\n  return {\n    options,\n    plugins: () => {\n      if (!plugins) {\n        plugins = createPluginDescriptors(options.plugins || [], dirname, alias);\n      }\n\n      return plugins;\n    },\n    presets: () => {\n      if (!presets) {\n        presets = createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n      }\n\n      return presets;\n    }\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCacheSync)(passPerPreset => createPresetDescriptors(items, dirname, alias, passPerPreset).map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc))));\n});\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => createPluginDescriptors(items, dirname, alias).map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc)));\n});\nconst DEFAULT_OPTIONS = {};\n\nfunction loadCachedDescriptor(cache, desc) {\n  const {\n    value,\n    options = DEFAULT_OPTIONS\n  } = desc;\n  if (options === false) return desc;\n  let cacheByOptions = cache.get(value);\n\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));\n\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return createDescriptors(\"preset\", items, dirname, alias, passPerPreset);\n}\n\nfunction createPluginDescriptors(items, dirname, alias) {\n  return createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction createDescriptors(type, items, dirname, alias, ownPass) {\n  const descriptors = items.map((item, index) => createDescriptor(item, dirname, {\n    type,\n    alias: `${alias}$${index}`,\n    ownPass: !!ownPass\n  }));\n  assertNoDuplicates(descriptors);\n  return descriptors;\n}\n\nfunction createDescriptor(pair, dirname, {\n  type,\n  alias,\n  ownPass\n}) {\n  const desc = (0, _item.getItemDescriptor)(pair);\n\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  let value = pair;\n\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\"To resolve a string-based item, the type of item must be given\");\n    }\n\n    const resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n    const request = value;\n    ({\n      filepath,\n      value\n    } = resolver(value, dirname));\n    file = {\n      request,\n      resolved: filepath\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file\n  };\n}\n\nfunction assertNoDuplicates(items) {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n    let nameMap = map.get(item.value);\n\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join(\"\\n\"));\n    }\n\n    nameMap.add(item.name);\n  }\n}","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/core/lib/config/config-descriptors.js"],"names":["Object","defineProperty","exports","value","createCachedDescriptors","createUncachedDescriptors","createDescriptor","_files","require","_item","_caching","isEqualDescriptor","a","b","name","options","dirname","alias","ownPass","file","request","resolved","plugins","presets","passPerPreset","createCachedPluginDescriptors","createCachedPresetDescriptors","createPluginDescriptors","createPresetDescriptors","PRESET_DESCRIPTOR_CACHE","WeakMap","makeWeakCacheSync","items","cache","using","dir","makeStrongCacheSync","map","desc","loadCachedDescriptor","PLUGIN_DESCRIPTOR_CACHE","DEFAULT_OPTIONS","cacheByOptions","get","set","possibilities","indexOf","matches","filter","possibility","length","push","createDescriptors","type","descriptors","item","index","assertNoDuplicates","pair","getItemDescriptor","Array","isArray","undefined","filepath","Error","resolver","loadPlugin","loadPreset","String","__esModule","default","Map","nameMap","Set","has","conflicts","i","JSON","stringify","join","add"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCachedDescriptors = createCachedDescriptors;\nexports.createUncachedDescriptors = createUncachedDescriptors;\nexports.createDescriptor = createDescriptor;\n\nvar _files = require(\"./files\");\n\nvar _item = require(\"./item\");\n\nvar _caching = require(\"./caching\");\n\nfunction isEqualDescriptor(a, b) {\n  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);\n}\n\nfunction createCachedDescriptors(dirname, options, alias) {\n  const {\n    plugins,\n    presets,\n    passPerPreset\n  } = options;\n  return {\n    options,\n    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => [],\n    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => []\n  };\n}\n\nfunction createUncachedDescriptors(dirname, options, alias) {\n  let plugins;\n  let presets;\n  return {\n    options,\n    plugins: () => {\n      if (!plugins) {\n        plugins = createPluginDescriptors(options.plugins || [], dirname, alias);\n      }\n\n      return plugins;\n    },\n    presets: () => {\n      if (!presets) {\n        presets = createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);\n      }\n\n      return presets;\n    }\n  };\n}\n\nconst PRESET_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCacheSync)(passPerPreset => createPresetDescriptors(items, dirname, alias, passPerPreset).map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc))));\n});\nconst PLUGIN_DESCRIPTOR_CACHE = new WeakMap();\nconst createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {\n  const dirname = cache.using(dir => dir);\n  return (0, _caching.makeStrongCacheSync)(alias => createPluginDescriptors(items, dirname, alias).map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc)));\n});\nconst DEFAULT_OPTIONS = {};\n\nfunction loadCachedDescriptor(cache, desc) {\n  const {\n    value,\n    options = DEFAULT_OPTIONS\n  } = desc;\n  if (options === false) return desc;\n  let cacheByOptions = cache.get(value);\n\n  if (!cacheByOptions) {\n    cacheByOptions = new WeakMap();\n    cache.set(value, cacheByOptions);\n  }\n\n  let possibilities = cacheByOptions.get(options);\n\n  if (!possibilities) {\n    possibilities = [];\n    cacheByOptions.set(options, possibilities);\n  }\n\n  if (possibilities.indexOf(desc) === -1) {\n    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));\n\n    if (matches.length > 0) {\n      return matches[0];\n    }\n\n    possibilities.push(desc);\n  }\n\n  return desc;\n}\n\nfunction createPresetDescriptors(items, dirname, alias, passPerPreset) {\n  return createDescriptors(\"preset\", items, dirname, alias, passPerPreset);\n}\n\nfunction createPluginDescriptors(items, dirname, alias) {\n  return createDescriptors(\"plugin\", items, dirname, alias);\n}\n\nfunction createDescriptors(type, items, dirname, alias, ownPass) {\n  const descriptors = items.map((item, index) => createDescriptor(item, dirname, {\n    type,\n    alias: `${alias}$${index}`,\n    ownPass: !!ownPass\n  }));\n  assertNoDuplicates(descriptors);\n  return descriptors;\n}\n\nfunction createDescriptor(pair, dirname, {\n  type,\n  alias,\n  ownPass\n}) {\n  const desc = (0, _item.getItemDescriptor)(pair);\n\n  if (desc) {\n    return desc;\n  }\n\n  let name;\n  let options;\n  let value = pair;\n\n  if (Array.isArray(value)) {\n    if (value.length === 3) {\n      [value, options, name] = value;\n    } else {\n      [value, options] = value;\n    }\n  }\n\n  let file = undefined;\n  let filepath = null;\n\n  if (typeof value === \"string\") {\n    if (typeof type !== \"string\") {\n      throw new Error(\"To resolve a string-based item, the type of item must be given\");\n    }\n\n    const resolver = type === \"plugin\" ? _files.loadPlugin : _files.loadPreset;\n    const request = value;\n    ({\n      filepath,\n      value\n    } = resolver(value, dirname));\n    file = {\n      request,\n      resolved: filepath\n    };\n  }\n\n  if (!value) {\n    throw new Error(`Unexpected falsy value: ${String(value)}`);\n  }\n\n  if (typeof value === \"object\" && value.__esModule) {\n    if (value.default) {\n      value = value.default;\n    } else {\n      throw new Error(\"Must export a default export when using ES6 modules.\");\n    }\n  }\n\n  if (typeof value !== \"object\" && typeof value !== \"function\") {\n    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);\n  }\n\n  if (filepath !== null && typeof value === \"object\" && value) {\n    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);\n  }\n\n  return {\n    name,\n    alias: filepath || alias,\n    value,\n    options,\n    dirname,\n    ownPass,\n    file\n  };\n}\n\nfunction assertNoDuplicates(items) {\n  const map = new Map();\n\n  for (const item of items) {\n    if (typeof item.value !== \"function\") continue;\n    let nameMap = map.get(item.value);\n\n    if (!nameMap) {\n      nameMap = new Set();\n      map.set(item.value, nameMap);\n    }\n\n    if (nameMap.has(item.name)) {\n      const conflicts = items.filter(i => i.value === item.value);\n      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join(\"\\n\"));\n    }\n\n    nameMap.add(item.name);\n  }\n}"]},"metadata":{},"sourceType":"script"}