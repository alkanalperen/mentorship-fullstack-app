{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), false);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    const optsList = [];\n\n    if (typeof importedSource === \"string\") {\n      optsList.push({\n        importedSource\n      });\n      optsList.push(opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      optsList.push(importedSource);\n    }\n\n    const newOpts = Object.assign({}, this._defaultOpts);\n\n    for (const opts of optsList) {\n      if (!opts) continue;\n      Object.keys(newOpts).forEach(key => {\n        if (opts[key] !== undefined) newOpts[key] = opts[key];\n      });\n\n      if (!isInit) {\n        if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n        if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n      }\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return t.sequenceExpression([t.numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/node_modules/@babel/helper-module-imports/lib/import-injector.js"],"names":["Object","defineProperty","exports","value","default","_assert","require","t","_importBuilder","_isModule","ImportInjector","constructor","path","importedSource","opts","_defaultOpts","importedType","importedInterop","importingInterop","ensureLiveReference","ensureNoContext","importPosition","programPath","find","p","isProgram","_programPath","_programScope","scope","_hub","hub","_applyDefaults","addDefault","importedSourceIn","addNamed","importName","_generateImport","addNamespace","addSideEffect","isInit","optsList","push","newOpts","assign","keys","forEach","key","undefined","nameHint","blockHoist","isDefault","isNamed","isNamespace","name","isMod","isModuleForNode","isModuleForBabel","Error","builder","import","namespace","named","es6Default","var","wildcardInterop","defaultInterop","read","prop","statements","resultName","done","_insertStatements","type","sequenceExpression","numericLiteral","body","get","i","length","isImportDeclaration","insertAfter","node","_blockHoist","targetPath","val","Number","isFinite","insertBefore","unshiftContainer"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar t = require(\"@babel/types\");\n\nvar _importBuilder = require(\"./import-builder\");\n\nvar _isModule = require(\"./is-module\");\n\nclass ImportInjector {\n  constructor(path, importedSource, opts) {\n    this._defaultOpts = {\n      importedSource: null,\n      importedType: \"commonjs\",\n      importedInterop: \"babel\",\n      importingInterop: \"babel\",\n      ensureLiveReference: false,\n      ensureNoContext: false,\n      importPosition: \"before\"\n    };\n    const programPath = path.find(p => p.isProgram());\n    this._programPath = programPath;\n    this._programScope = programPath.scope;\n    this._hub = programPath.hub;\n    this._defaultOpts = this._applyDefaults(importedSource, opts, true);\n  }\n\n  addDefault(importedSourceIn, opts) {\n    return this.addNamed(\"default\", importedSourceIn, opts);\n  }\n\n  addNamed(importName, importedSourceIn, opts) {\n    _assert(typeof importName === \"string\");\n\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);\n  }\n\n  addNamespace(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);\n  }\n\n  addSideEffect(importedSourceIn, opts) {\n    return this._generateImport(this._applyDefaults(importedSourceIn, opts), false);\n  }\n\n  _applyDefaults(importedSource, opts, isInit = false) {\n    const optsList = [];\n\n    if (typeof importedSource === \"string\") {\n      optsList.push({\n        importedSource\n      });\n      optsList.push(opts);\n    } else {\n      _assert(!opts, \"Unexpected secondary arguments.\");\n\n      optsList.push(importedSource);\n    }\n\n    const newOpts = Object.assign({}, this._defaultOpts);\n\n    for (const opts of optsList) {\n      if (!opts) continue;\n      Object.keys(newOpts).forEach(key => {\n        if (opts[key] !== undefined) newOpts[key] = opts[key];\n      });\n\n      if (!isInit) {\n        if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;\n        if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;\n      }\n    }\n\n    return newOpts;\n  }\n\n  _generateImport(opts, importName) {\n    const isDefault = importName === \"default\";\n    const isNamed = !!importName && !isDefault;\n    const isNamespace = importName === null;\n    const {\n      importedSource,\n      importedType,\n      importedInterop,\n      importingInterop,\n      ensureLiveReference,\n      ensureNoContext,\n      nameHint,\n      importPosition,\n      blockHoist\n    } = opts;\n    let name = nameHint || importName;\n    const isMod = (0, _isModule.default)(this._programPath);\n    const isModuleForNode = isMod && importingInterop === \"node\";\n    const isModuleForBabel = isMod && importingInterop === \"babel\";\n\n    if (importPosition === \"after\" && !isMod) {\n      throw new Error(`\"importPosition\": \"after\" is only supported in modules`);\n    }\n\n    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);\n\n    if (importedType === \"es6\") {\n      if (!isModuleForNode && !isModuleForBabel) {\n        throw new Error(\"Cannot import an ES6 module from CommonJS\");\n      }\n\n      builder.import();\n\n      if (isNamespace) {\n        builder.namespace(nameHint || importedSource);\n      } else if (isDefault || isNamed) {\n        builder.named(name, importName);\n      }\n    } else if (importedType !== \"commonjs\") {\n      throw new Error(`Unexpected interopType \"${importedType}\"`);\n    } else if (importedInterop === \"babel\") {\n      if (isModuleForNode) {\n        name = name !== \"default\" ? name : importedSource;\n        const es6Default = `${importedSource}$es6Default`;\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(es6Default).var(name || importedSource).wildcardInterop();\n        } else if (isDefault) {\n          if (ensureLiveReference) {\n            builder.default(es6Default).var(name || importedSource).defaultInterop().read(\"default\");\n          } else {\n            builder.default(es6Default).var(name).defaultInterop().prop(importName);\n          }\n        } else if (isNamed) {\n          builder.default(es6Default).read(importName);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource).wildcardInterop();\n        } else if ((isDefault || isNamed) && ensureLiveReference) {\n          if (isDefault) {\n            name = name !== \"default\" ? name : importedSource;\n            builder.var(name).read(importName);\n            builder.defaultInterop();\n          } else {\n            builder.var(importedSource).read(importName);\n          }\n        } else if (isDefault) {\n          builder.var(name).defaultInterop().prop(importName);\n        } else if (isNamed) {\n          builder.var(name).prop(importName);\n        }\n      }\n    } else if (importedInterop === \"compiled\") {\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.namespace(name || importedSource);\n        } else if (isDefault || isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault || isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.prop(importName).var(name);\n          }\n        }\n      }\n    } else if (importedInterop === \"uncompiled\") {\n      if (isDefault && ensureLiveReference) {\n        throw new Error(\"No live reference for commonjs default\");\n      }\n\n      if (isModuleForNode) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.default(importedSource).read(name);\n        }\n      } else if (isModuleForBabel) {\n        builder.import();\n\n        if (isNamespace) {\n          builder.default(name || importedSource);\n        } else if (isDefault) {\n          builder.default(name);\n        } else if (isNamed) {\n          builder.named(name, importName);\n        }\n      } else {\n        builder.require();\n\n        if (isNamespace) {\n          builder.var(name || importedSource);\n        } else if (isDefault) {\n          builder.var(name);\n        } else if (isNamed) {\n          if (ensureLiveReference) {\n            builder.var(importedSource).read(name);\n          } else {\n            builder.var(name).prop(importName);\n          }\n        }\n      }\n    } else {\n      throw new Error(`Unknown importedInterop \"${importedInterop}\".`);\n    }\n\n    const {\n      statements,\n      resultName\n    } = builder.done();\n\n    this._insertStatements(statements, importPosition, blockHoist);\n\n    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== \"Identifier\") {\n      return t.sequenceExpression([t.numericLiteral(0), resultName]);\n    }\n\n    return resultName;\n  }\n\n  _insertStatements(statements, importPosition = \"before\", blockHoist = 3) {\n    const body = this._programPath.get(\"body\");\n\n    if (importPosition === \"after\") {\n      for (let i = body.length - 1; i >= 0; i--) {\n        if (body[i].isImportDeclaration()) {\n          body[i].insertAfter(statements);\n          return;\n        }\n      }\n    } else {\n      statements.forEach(node => {\n        node._blockHoist = blockHoist;\n      });\n      const targetPath = body.find(p => {\n        const val = p.node._blockHoist;\n        return Number.isFinite(val) && val < 4;\n      });\n\n      if (targetPath) {\n        targetPath.insertBefore(statements);\n        return;\n      }\n    }\n\n    this._programPath.unshiftContainer(\"body\", statements);\n  }\n\n}\n\nexports.default = ImportInjector;"]},"metadata":{},"sourceType":"script"}