{"ast":null,"code":"import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".rmsc{--rmsc-main:#4285f4;--rmsc-hover:#f1f3f5;--rmsc-selected:#e2e6ea;--rmsc-border:#ccc;--rmsc-gray:#aaa;--rmsc-bg:#fff;--rmsc-p:10px;--rmsc-radius:4px;--rmsc-h:38px}.rmsc *{box-sizing:border-box;transition:all .2s ease}.rmsc .gray{color:var(--rmsc-gray)}.rmsc .dropdown-content{position:absolute;z-index:1;top:100%;width:100%;padding-top:8px}.rmsc .dropdown-content .panel-content{overflow:hidden;border-radius:var(--rmsc-radius);background:var(--rmsc-bg);box-shadow:0 0 0 1px rgba(0,0,0,.1),0 4px 11px rgba(0,0,0,.1)}.rmsc .dropdown-container{position:relative;outline:0;background-color:var(--rmsc-bg);border:1px solid var(--rmsc-border);border-radius:var(--rmsc-radius)}.rmsc .dropdown-container[aria-disabled=true]:focus-within{box-shadow:var(--rmsc-gray) 0 0 0 1px;border-color:var(--rmsc-gray)}.rmsc .dropdown-container:focus-within{box-shadow:var(--rmsc-main) 0 0 0 1px;border-color:var(--rmsc-main)}.rmsc .dropdown-heading{position:relative;padding:0 var(--rmsc-p);display:flex;align-items:center;width:100%;height:var(--rmsc-h);cursor:default;outline:0}.rmsc .dropdown-heading .dropdown-heading-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex:1}.rmsc .clear-selected-button{cursor:pointer;background:none;border:0;padding:0;display:flex}.rmsc .options{max-height:260px;overflow-y:auto;margin:0;padding-left:0}.rmsc .options li{list-style:none;margin:0}.rmsc .select-item{box-sizing:border-box;cursor:pointer;display:block;padding:var(--rmsc-p);outline:0}.rmsc .select-item:focus,.rmsc .select-item:hover{background:var(--rmsc-hover)}.rmsc .select-item.selected{background:var(--rmsc-selected)}.rmsc .no-options{padding:var(--rmsc-p);text-align:center;color:var(--rmsc-gray)}.rmsc .search{width:100%;position:relative;border-bottom:1px solid var(--rmsc-border)}.rmsc .search input{height:var(--rmsc-h);padding:0 var(--rmsc-p);width:100%;outline:0;border:0}.rmsc .search-clear-button{cursor:pointer;position:absolute;top:0;right:0;bottom:0;background:none;border:0;padding:0 calc(var(--rmsc-p)/2)}.rmsc .search-clear-button [hidden]{display:none}.rmsc .item-renderer{display:flex;align-items:baseline}.rmsc .item-renderer input{margin:0 5px 0 0}.rmsc .item-renderer.disabled{opacity:.5}.rmsc .spinner{animation:rotate 2s linear infinite}.rmsc .spinner .path{stroke:var(--rmsc-border);stroke-width:4px;stroke-linecap:round;animation:dash 1.5s ease-in-out infinite}@keyframes rotate{to{transform:rotate(1turn)}}@keyframes dash{0%{stroke-dasharray:1,150;stroke-dashoffset:0}50%{stroke-dasharray:90,150;stroke-dashoffset:-35}to{stroke-dasharray:90,150;stroke-dashoffset:-124}}\";\nstyleInject(css_248z);\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n  create: \"Create\"\n};\nconst defaultProps = {\n  value: [],\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: []\n};\nconst MultiSelectContext = /*#__PURE__*/React.createContext({});\n\nconst MultiSelectProvider = ({\n  props,\n  children\n}) => {\n  const [options, setOptions] = useState(props.options);\n\n  const t = key => {\n    var _props$overrideString;\n\n    return ((_props$overrideString = props.overrideStrings) == null ? void 0 : _props$overrideString[key]) || defaultStrings[key];\n  };\n\n  useEffect(() => {\n    setOptions(props.options);\n  }, [props.options]);\n  return React.createElement(MultiSelectContext.Provider, {\n    value: {\n      t,\n      ...defaultProps,\n      ...props,\n      options,\n      setOptions\n    }\n  }, children);\n};\n\nconst useMultiSelect = () => React.useContext(MultiSelectContext);\n/**\r\n * similar to `useEffect` but gets triggered only when value changes\r\n * @param fn executable function on dependency updates\r\n * @param inputs dependency array\r\n */\n\n\nfunction useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n  useEffect(() => {\n    if (didMountRef.current) fn();else didMountRef.current = true;\n  }, inputs);\n}\n/*\r\n * copied from https://github.com/imbhargav5/rooks/blob/master/packages/shared/useKeyRef.ts\r\n */\n\n\nconst defaultOptions = {\n  when: true,\n  eventTypes: [\"keydown\"]\n};\n/**\r\n * useKey hook\r\n *\r\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\r\n *\r\n * @param {[string|number]} keyList\r\n * @param {function} callback\r\n * @param {Options} options\r\n */\n\nfunction useKey(input, callback, opts) {\n  const keyList = useMemo(() => Array.isArray(input) ? input : [input], [input]);\n  const options = Object.assign({}, defaultOptions, opts);\n  const {\n    when,\n    eventTypes\n  } = options;\n  const callbackRef = useRef(callback);\n  let {\n    target\n  } = options;\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n  const handle = useCallback(e => {\n    if (keyList.some(k => e.key === k || e.code === k)) {\n      callbackRef.current(e);\n    }\n  }, [keyList]);\n  useEffect(() => {\n    if (when && typeof window !== \"undefined\") {\n      const targetNode = target ? target[\"current\"] : window;\n      eventTypes.forEach(eventType => {\n        targetNode && targetNode.addEventListener(eventType, handle);\n      });\n      return () => {\n        eventTypes.forEach(eventType => {\n          targetNode && targetNode.removeEventListener(eventType, handle);\n        });\n      };\n    }\n  }, [when, eventTypes, keyList, target, callback]);\n}\n\nconst KEY = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \"Space\"\n};\n\nconst debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n/**\r\n * Filters React Select options and sorts by similarity to a search filter.\r\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\r\n * Wallenberg Traditional High School\". Case insensitive. Ignores\r\n * non-alphanumeric characters.\r\n *\r\n * @param  options  An unfiltered list of Options.\r\n * @param? filter  A string to compare against Option labels.\r\n * @param? substitutions  Strings with multiple spellings or variations that we\r\n *           expect to match, eg. accented characters or abbreviated words.\r\n *\r\n * @return A filtered and sorted array of Options.\r\n */\n\n\nfunction filterOptions(options, filter, substitutions) {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return options // Filter out undefined or null Options.\n  .filter(({\n    label,\n    value\n  }) => label != null && value != null) // Create a {score, Option} pair for each Option based on its label's\n  // similarity to the filter text.\n  .map(option => ({\n    option: option,\n    score: typeaheadSimilarity(cleanUpText(option.label, substitutions), cleanFilter)\n  })) // Only include matches of the entire substring, with a slight\n  // affordance for transposition or extra characters.\n  .filter(pair => pair.score >= cleanFilter.length - 2) // Sort 'em by order of their score.\n  .sort((a, b) => b.score - a.score) // â€¦and grab the original Options back from their pairs.\n  .map(pair => pair.option);\n}\n/**\r\n * Scores the similarity between two strings by returning the length of the\r\n * longest common subsequence. Intended for comparing strings of different\r\n * lengths; eg. when matching a typeahead search input with a school name.\r\n\n * Meant for use in an instant search box where results are being fetched\r\n * as a user is typing.\r\n *\r\n * @param  a  The longer string (though, we flip them if it's shorter).\r\n * @param  b  The shorter string, eg. a typeahead search input.\r\n *\r\n * @return The length of the longest common subsequence. Higher scores indicate\r\n *           closer matches.\r\n */\n\n\nfunction typeaheadSimilarity(a, b) {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  } // Ensure `a` isn't shorter than `b`.\n\n\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  } // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n\n\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  } // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n\n\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  } // Populate the rest of the table with a dynamic programming algorithm.\n\n\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] = a[x - 1] === b[y - 1] ? 1 + table[x - 1][y - 1] : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n/**\r\n * Apply string substitutions, remove non-alphanumeric characters, and convert\r\n * all letters to uppercase.\r\n *\r\n * eg. 'Scoil BhrÃ­de Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\r\n *\r\n * @param  input  An unsanitized input string.\r\n * @param  substitutions  Strings with multiple spellings or variations that we\r\n *          expect to match, for example accented characters or abbreviated\r\n *          words.\r\n *\r\n * @return The sanitized text.\r\n */\n\n\nfunction cleanUpText(input, substitutions) {\n  if (!input) {\n    return \"\";\n  } // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n\n\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n\n  const safeSubstitutions = substitutions; // For Flow.\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n\nconst Cross = () => React.createElement(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  className: \"dropdown-search-clear-icon gray\"\n}, React.createElement(\"line\", {\n  x1: \"18\",\n  y1: \"6\",\n  x2: \"6\",\n  y2: \"18\"\n}), React.createElement(\"line\", {\n  x1: \"6\",\n  y1: \"6\",\n  x2: \"18\",\n  y2: \"18\"\n}));\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled\n}) => React.createElement(\"div\", {\n  className: `item-renderer ${disabled && \"disabled\"}`\n}, React.createElement(\"input\", {\n  type: \"checkbox\",\n  onChange: onClick,\n  checked: checked,\n  tabIndex: -1,\n  disabled: disabled\n}), React.createElement(\"span\", null, option.label));\n/**\r\n * This component represents an individual item in the multi-select drop-down\r\n */\n\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick\n}) => {\n  const itemRef = useRef();\n\n  const onOptionCheck = e => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = e => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, {\n    target: itemRef\n  });\n  return React.createElement(\"label\", {\n    className: `select-item ${checked && \"selected\"}`,\n    role: \"option\",\n    \"aria-selected\": checked,\n    tabIndex: tabIndex,\n    ref: itemRef\n  }, React.createElement(ItemRenderer, {\n    option: option,\n    checked: checked,\n    onClick: handleClick,\n    disabled: disabled\n  }));\n};\n/**\r\n * This component represents an unadorned list of SelectItem (s).\r\n */\n\n\nconst SelectList = ({\n  options,\n  onClick,\n  skipIndex\n}) => {\n  const {\n    disabled,\n    value,\n    onChange,\n    ItemRenderer\n  } = useMultiSelect();\n\n  const handleSelectionChanged = (option, checked) => {\n    if (disabled) return;\n    onChange(checked ? [...value, option] : value.filter(o => o.value !== option.value));\n  };\n\n  return React.createElement(React.Fragment, null, options.map((o, i) => {\n    const tabIndex = i + skipIndex;\n    return React.createElement(\"li\", {\n      key: (o == null ? void 0 : o.key) || i\n    }, React.createElement(SelectItem, {\n      tabIndex: tabIndex,\n      option: o,\n      onSelectionChanged: c => handleSelectionChanged(o, c),\n      checked: !!value.find(s => s.value === o.value),\n      onClick: e => onClick(e, tabIndex),\n      itemRenderer: ItemRenderer,\n      disabled: o.disabled || disabled\n    }));\n  }));\n};\n/**\r\n * This component represents the entire panel which gets dropped down when the\r\n * user selects the component.  It encapsulates the search filter, the\r\n * Select-all item, and the list of options.\r\n */\n\n\nvar FocusType;\n\n(function (FocusType) {\n  FocusType[FocusType[\"SEARCH\"] = 0] = \"SEARCH\";\n  FocusType[FocusType[\"NONE\"] = -1] = \"NONE\";\n})(FocusType || (FocusType = {}));\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption\n  } = useMultiSelect();\n  const listRef = useRef();\n  const searchInputRef = useRef();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(debounce(query => setSearchTextForFilter(query), debounceDuration), []);\n  const skipIndex = useMemo(() => {\n    let start = 0;\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\"\n  };\n\n  const selectAllValues = checked => {\n    const filteredValues = filteredOptions.filter(o => !o.disabled).map(o => o.value);\n\n    if (checked) {\n      const selectedValues = value.map(o => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n      return filteredOptions.filter(o => finalSelectedValues.includes(o.value));\n    }\n\n    return value.filter(o => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = checked => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = e => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    var _searchInputRef$curre;\n\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef == null ? void 0 : (_searchInputRef$curre = searchInputRef.current) == null ? void 0 : _searchInputRef$curre.focus();\n  };\n\n  const handleItemClicked = index => setFocusIndex(index); // Arrow Key Navigation\n\n\n  const handleKeyDown = e => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n\n      default:\n        return;\n    }\n\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleOnCreateOption = async () => {\n    let newOption = {\n      label: searchText,\n      value: searchText,\n      __isNew__: true\n    }; // if custom `onCreateOption` is given then this will call this\n\n    if (onCreateOption) {\n      newOption = await onCreateOption(searchText);\n    } // adds created value to existing options\n\n\n    setOptions([newOption, ...options]);\n    handleClear();\n    onChange([...value, newOption]);\n  };\n\n  const getFilteredOptions = async () => customFilterOptions ? await customFilterOptions(options, searchTextForFilter) : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = offset => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    var _listRef$current, _listRef$current$quer;\n\n    listRef == null ? void 0 : (_listRef$current = listRef.current) == null ? void 0 : (_listRef$current$quer = _listRef$current.querySelector(`[tabIndex='${focusIndex}']`)) == null ? void 0 : _listRef$current$quer.focus();\n  }, [focusIndex]);\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter(o => !o.disabled);\n    return [filteredOptionsList.every(o => value.findIndex(v => v.value === o.value) !== -1), filteredOptionsList.length !== 0]; // eslint-disable-next-line\n  }, [filteredOptions, value]);\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n  return React.createElement(\"div\", {\n    className: \"select-panel\",\n    role: \"listbox\",\n    ref: listRef\n  }, !disableSearch && React.createElement(\"div\", {\n    className: \"search\"\n  }, React.createElement(\"input\", {\n    placeholder: t(\"search\"),\n    type: \"text\",\n    \"aria-describedby\": t(\"search\"),\n    onChange: handleSearchChange,\n    onFocus: handleSearchFocus,\n    value: searchText,\n    ref: searchInputRef,\n    tabIndex: 0\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"search-clear-button\",\n    hidden: !searchText,\n    onClick: handleClear,\n    \"aria-label\": t(\"clearSearch\")\n  }, ClearIcon || React.createElement(Cross, null))), React.createElement(\"ul\", {\n    className: \"options\"\n  }, hasSelectAll && hasSelectableOptions && React.createElement(SelectItem, {\n    tabIndex: skipIndex === 1 ? 0 : 1,\n    checked: isAllOptionSelected,\n    option: selectAllOption,\n    onSelectionChanged: selectAllChanged,\n    onClick: () => handleItemClicked(1),\n    itemRenderer: ItemRenderer,\n    disabled: disabled\n  }), filteredOptions.length ? React.createElement(SelectList, {\n    skipIndex: skipIndex,\n    options: filteredOptions,\n    onClick: (_e, index) => handleItemClicked(index)\n  }) : isCreatable ? React.createElement(\"li\", {\n    onClick: handleOnCreateOption,\n    className: \"select-item creatable\"\n  }, t(\"create\"), \" \\\"\", searchText, \"\\\"\") : React.createElement(\"li\", {\n    className: \"no-options\"\n  }, t(\"noOptions\"))));\n};\n\nconst Arrow = ({\n  expanded\n}) => React.createElement(\"svg\", {\n  width: \"24\",\n  height: \"24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: \"2\",\n  className: \"dropdown-heading-dropdown-arrow gray\"\n}, React.createElement(\"path\", {\n  d: expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"\n}));\n\nconst DropdownHeader = () => {\n  const {\n    t,\n    value,\n    options,\n    valueRenderer\n  } = useMultiSelect();\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map(s => s.label).join(\", \");\n\n  return noneSelected ? React.createElement(\"span\", {\n    className: \"gray\"\n  }, customText || t(\"selectSomeItems\")) : React.createElement(\"span\", null, customText || (allSelected ? t(\"allItemsAreSelected\") : getSelectedText()));\n};\n\nconst Loading = ({\n  size = 24\n}) => React.createElement(\"span\", {\n  style: {\n    width: size,\n    marginRight: \"0.2rem\"\n  }\n}, React.createElement(\"svg\", {\n  width: size,\n  height: size,\n  className: \"spinner\",\n  viewBox: \"0 0 50 50\",\n  style: {\n    display: \"inline\",\n    verticalAlign: \"middle\"\n  }\n}, React.createElement(\"circle\", {\n  cx: \"25\",\n  cy: \"25\",\n  r: \"20\",\n  fill: \"none\",\n  className: \"path\"\n})));\n/**\r\n * A generic dropdown component.  It takes the children of the component\r\n * and hosts it in the component.  When the component is selected, it\r\n * drops-down the contentComponent and applies the contentProps.\r\n */\n\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon\n  } = useMultiSelect();\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n  const wrapper = useRef();\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = e => {\n    // allows space and enter when focused on input/button\n    if ([\"text\", \"button\"].includes(e.target.type) && [KEY.SPACE, KEY.ENTER].includes(e.code)) {\n      return;\n    }\n\n    if (isInternalExpand) {\n      if (e.code === KEY.ESCAPE) {\n        var _wrapper$current;\n\n        setExpanded(false);\n        wrapper == null ? void 0 : (_wrapper$current = wrapper.current) == null ? void 0 : _wrapper$current.focus();\n      } else {\n        setExpanded(true);\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  useKey([KEY.ENTER, KEY.ARROW_DOWN, KEY.SPACE, KEY.ESCAPE], handleKeyDown, {\n    target: wrapper\n  });\n\n  const handleHover = iexpanded => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = e => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = e => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return React.createElement(\"div\", {\n    tabIndex: 0,\n    className: \"dropdown-container\",\n    \"aria-labelledby\": labelledBy,\n    \"aria-expanded\": expanded,\n    \"aria-readonly\": true,\n    \"aria-disabled\": disabled,\n    ref: wrapper,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, React.createElement(\"div\", {\n    className: \"dropdown-heading\",\n    onClick: toggleExpanded\n  }, React.createElement(\"div\", {\n    className: \"dropdown-heading-value\"\n  }, React.createElement(DropdownHeader, null)), isLoading && React.createElement(Loading, null), value.length > 0 && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-selected-button\",\n    onClick: handleClearSelected,\n    disabled: disabled,\n    \"aria-label\": t(\"clearSelected\")\n  }, ClearSelectedIcon || React.createElement(Cross, null)), React.createElement(FinalArrow, {\n    expanded: expanded\n  })), expanded && React.createElement(\"div\", {\n    className: \"dropdown-content\"\n  }, React.createElement(\"div\", {\n    className: \"panel-content\"\n  }, React.createElement(SelectPanel, null))));\n};\n\nconst MultiSelect = props => React.createElement(MultiSelectProvider, {\n  props: props\n}, React.createElement(\"div\", {\n  className: `rmsc ${props.className || \"multi-select\"}`\n}, React.createElement(Dropdown, null)));\n\nexport default MultiSelect;\nexport { Dropdown, SelectItem, SelectPanel };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/hooks/use-multi-select.tsx","../src/hooks/use-did-update-effect.tsx","../src/hooks/use-key.tsx","../src/lib/constants.tsx","../src/lib/debounce.tsx","../src/lib/fuzzy-match-utils.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/multi-select/arrow.tsx","../src/multi-select/header.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/multi-select/index.tsx"],"names":["defaultStrings","allItemsAreSelected","clearSearch","clearSelected","noOptions","search","selectAll","selectSomeItems","create","defaultProps","value","hasSelectAll","className","debounceDuration","options","MultiSelectContext","React","MultiSelectProvider","children","useState","props","t","key","useEffect","setOptions","useMultiSelect","useDidUpdateEffect","fn","inputs","didMountRef","useRef","defaultOptions","when","eventTypes","keyList","useMemo","Array","Object","callbackRef","target","handle","useCallback","e","k","targetNode","eventType","KEY","ARROW_DOWN","ARROW_UP","ENTER","ESCAPE","SPACE","debounce","clearTimeout","timeout","setTimeout","func","filterOptions","filter","substitutions","cleanFilter","cleanUpText","label","option","score","typeaheadSimilarity","pair","b","a","aLength","bLength","table","x","y","Math","input","safeSubstitutions","unsubbed","output","Cross","width","height","fill","stroke","strokeWidth","x1","y1","x2","y2","DefaultItemRenderer","disabled","type","onChange","onClick","checked","tabIndex","SelectItem","itemRenderer","ItemRenderer","itemRef","onOptionCheck","toggleChecked","onSelectionChanged","handleClick","useKey","role","ref","SelectList","skipIndex","handleSelectionChanged","o","i","c","s","FocusType","SelectPanel","onCreateOption","listRef","searchInputRef","debouncedSearch","query","setSearchTextForFilter","start","selectAllOption","selectAllLabel","selectAllValues","filteredValues","filteredOptions","selectedValues","finalSelectedValues","selectAllChanged","newOptions","handleSearchChange","setSearchText","setFocusIndex","handleClear","handleItemClicked","index","handleKeyDown","updateFocus","handleSearchFocus","handleOnCreateOption","newOption","__isNew__","getFilteredOptions","customFilterOptions","offset","newFocus","focusIndex","filteredOptionsList","v","placeholder","onFocus","searchText","hidden","ClearIcon","isAllOptionSelected","isCreatable","Arrow","expanded","d","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","getSelectedText","Loading","size","style","marginRight","viewBox","display","verticalAlign","cx","cy","r","Dropdown","ClearSelectedIcon","FinalArrow","ArrowRenderer","wrapper","onMenuToggle","defaultIsOpen","setIsInternalExpand","setExpanded","handleHover","iexpanded","isInternalExpand","handleFocus","setHasFocus","handleBlur","handleMouseEnter","handleMouseLeave","toggleExpanded","isLoading","handleClearSelected","labelledBy","onBlur","onMouseEnter","onMouseLeave","MultiSelect"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useState } from \"react\";\n\nimport { ISelectProps, Option } from \"../lib/interfaces\";\n\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n  create: \"Create\",\n};\n\nconst defaultProps: Partial<ISelectProps> = {\n  value: [],\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: [] as Option[],\n};\n\ninterface MultiSelectContextProps extends ISelectProps {\n  t: (key: string) => string;\n  setOptions?;\n}\n\ninterface MultiSelectProviderProps {\n  props: ISelectProps;\n  children;\n}\n\nconst MultiSelectContext = React.createContext<MultiSelectContextProps>(\n  {} as MultiSelectContextProps\n);\n\nexport const MultiSelectProvider = ({\n  props,\n  children,\n}: MultiSelectProviderProps) => {\n  const [options, setOptions] = useState(props.options);\n  const t = (key) => props.overrideStrings?.[key] || defaultStrings[key];\n\n  useEffect(() => {\n    setOptions(props.options);\n  }, [props.options]);\n\n  return (\n    <MultiSelectContext.Provider\n      value={{ t, ...defaultProps, ...props, options, setOptions }}\n    >\n      {children}\n    </MultiSelectContext.Provider>\n  );\n};\n\nexport const useMultiSelect = () => React.useContext(MultiSelectContext);\n","import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n","/*\n * copied from https://github.com/imbhargav5/rooks/blob/master/packages/shared/useKeyRef.ts\n */\n\nimport { Ref, useEffect, useCallback, useRef, useMemo } from \"react\";\n\ninterface Options {\n  /**\n   * Condition which if true, will enable the event listeners\n   */\n  when?: boolean;\n  /**\n   * Keyboardevent types to listen for. Valid options are keyDown, keyPress and keyUp\n   */\n  eventTypes?: Array<string | number>;\n  /**\n   * target ref on which the events should be listened. If no target is specified,\n   * events are listened to on the window\n   */\n  target?: Ref<HTMLElement> | null;\n}\n\nconst defaultOptions = {\n  when: true,\n  eventTypes: [\"keydown\"],\n};\n\n/**\n * useKey hook\n *\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\n *\n * @param {[string|number]} keyList\n * @param {function} callback\n * @param {Options} options\n */\nfunction useKey(\n  input: string | number | Array<string | number>,\n  callback: (e: KeyboardEvent) => any,\n  opts?: Options\n): void {\n  const keyList: Array<string | number> = useMemo(\n    () => (Array.isArray(input) ? input : [input]),\n    [input]\n  );\n  const options = Object.assign({}, defaultOptions, opts);\n  const { when, eventTypes } = options;\n  const callbackRef = useRef<(e: KeyboardEvent) => any>(callback);\n  let { target } = options;\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  const handle = useCallback(\n    (e: KeyboardEvent) => {\n      if (keyList.some((k) => e.key === k || e.code === k)) {\n        callbackRef.current(e);\n      }\n    },\n    [keyList]\n  );\n\n  useEffect((): any => {\n    if (when && typeof window !== \"undefined\") {\n      const targetNode = target ? target[\"current\"] : window;\n      eventTypes.forEach((eventType) => {\n        targetNode && targetNode.addEventListener(eventType, handle);\n      });\n      return () => {\n        eventTypes.forEach((eventType) => {\n          targetNode && targetNode.removeEventListener(eventType, handle);\n        });\n      };\n    }\n  }, [when, eventTypes, keyList, target, callback]);\n}\n\nexport { useKey };\n","export const KEY = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \"Space\",\n};\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // â€¦and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil BhrÃ­de Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","import React from \"react\";\n\nexport const Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n","import React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => (\n  <div className={`item-renderer ${disabled && \"disabled\"}`}>\n    <input\n      type=\"checkbox\"\n      onChange={onClick}\n      checked={checked}\n      tabIndex={-1}\n      disabled={disabled}\n    />\n    <span>{option.label}</span>\n  </div>\n);\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  const onOptionCheck = (e) => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, { target: itemRef });\n\n  return (\n    <label\n      className={`select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  options: Option[];\n  onClick: Function;\n  skipIndex: number;\n}\n\nconst SelectList = ({ options, onClick, skipIndex }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) return;\n\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={!!value.find((s) => s.value === o.value)}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = 0,\n  NONE = -1,\n}\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption,\n  } = useMultiSelect();\n\n  const listRef = useRef<any>();\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const skipIndex = useMemo(() => {\n    let start = 0;\n\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return filteredOptions.filter((o) =>\n        finalSelectedValues.includes(o.value)\n      );\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  // Arrow Key Navigation\n  const handleKeyDown = (e) => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef,\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleOnCreateOption = async () => {\n    let newOption = { label: searchText, value: searchText, __isNew__: true };\n\n    // if custom `onCreateOption` is given then this will call this\n    if (onCreateOption) {\n      newOption = await onCreateOption(searchText);\n    }\n\n    // adds created value to existing options\n    setOptions([newOption, ...options]);\n    handleClear();\n\n    onChange([...value, newOption]);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    listRef?.current?.querySelector(`[tabIndex='${focusIndex}']`)?.focus();\n  }, [focusIndex]);\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" ref={listRef}>\n      {!disableSearch && (\n        <div className=\"search\">\n          <input\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n            tabIndex={0}\n          />\n          <button\n            type=\"button\"\n            className=\"search-clear-button\"\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      <ul className=\"options\">\n        {hasSelectAll && hasSelectableOptions && (\n          <SelectItem\n            tabIndex={skipIndex === 1 ? 0 : 1}\n            checked={isAllOptionSelected}\n            option={selectAllOption}\n            onSelectionChanged={selectAllChanged}\n            onClick={() => handleItemClicked(1)}\n            itemRenderer={ItemRenderer}\n            disabled={disabled}\n          />\n        )}\n\n        {filteredOptions.length ? (\n          <SelectList\n            skipIndex={skipIndex}\n            options={filteredOptions}\n            onClick={(_e, index) => handleItemClicked(index)}\n          />\n        ) : isCreatable ? (\n          <li onClick={handleOnCreateOption} className=\"select-item creatable\">\n            {t(\"create\")} \"{searchText}\"\n          </li>\n        ) : (\n          <li className=\"no-options\">{t(\"noOptions\")}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","import React from \"react\";\n\nexport const Arrow = ({ expanded }) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-heading-dropdown-arrow gray\"\n  >\n    <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\n\nexport const DropdownHeader = () => {\n  const { t, value, options, valueRenderer } = useMultiSelect();\n\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">{customText || t(\"selectSomeItems\")}</span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected ? t(\"allItemsAreSelected\") : getSelectedText())}\n    </span>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = ({ size = 24 }) => (\n  <span\n    style={{\n      width: size,\n      marginRight: \"0.2rem\",\n    }}\n  >\n    <svg\n      width={size}\n      height={size}\n      className=\"spinner\"\n      viewBox=\"0 0 50 50\"\n      style={{ display: \"inline\", verticalAlign: \"middle\" }}\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n    </svg>\n  </span>\n);\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    // allows space and enter when focused on input/button\n    if (\n      [\"text\", \"button\"].includes(e.target.type) &&\n      [KEY.SPACE, KEY.ENTER].includes(e.code)\n    ) {\n      return;\n    }\n\n    if (isInternalExpand) {\n      if (e.code === KEY.ESCAPE) {\n        setExpanded(false);\n        wrapper?.current?.focus();\n      } else {\n        setExpanded(true);\n      }\n    }\n    e.preventDefault();\n  };\n\n  useKey([KEY.ENTER, KEY.ARROW_DOWN, KEY.SPACE, KEY.ESCAPE], handleKeyDown, {\n    target: wrapper,\n  });\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className=\"dropdown-container\"\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"dropdown-heading\" onClick={toggleExpanded}>\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"clear-selected-button\"\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className=\"dropdown-content\">\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import \"../style.css\";\n\nimport React from \"react\";\n\nimport { MultiSelectProvider } from \"../hooks/use-multi-select\";\nimport { ISelectProps } from \"../lib/interfaces\";\nimport Dropdown from \"./dropdown\";\n\nconst MultiSelect = (props: ISelectProps) => (\n  <MultiSelectProvider props={props}>\n    <div className={`rmsc ${props.className || \"multi-select\"}`}>\n      <Dropdown />\n    </div>\n  </MultiSelectProvider>\n);\n\nexport default MultiSelect;\n"]},"metadata":{},"sourceType":"module"}