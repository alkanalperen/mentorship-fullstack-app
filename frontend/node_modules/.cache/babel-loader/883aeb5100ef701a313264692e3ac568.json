{"ast":null,"code":"var _jsxFileName = \"/Users/alperenalkan/obss/frontend/frontend/src/components/AdminTopicPanel.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid, GridRowsProp, GridColDef } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminTopicPanel() {\n  _s();\n\n  const options = [{\n    label: \"Grapes 🍇\",\n    value: \"grapes\"\n  }];\n  const [selected, setSelected] = useState([]);\n  const initialValue = [{\n    id: 0,\n    title: \"dsa\",\n    subTitle: \"---SELECT-OPTION----\"\n  }];\n  const [stateOptions, setStateValues] = useState(initialValue);\n  const [optionsArr, setOptions] = useState(options);\n  const [titleId, setTitle] = useState(\"\");\n  const [subTitleId, setSubTitle] = useState([]);\n  const [thoughts, setThoughts] = useState(\"\");\n  const [subTArray, setSubT] = useState(initialValue);\n  const rows = [{\n    id: 1,\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    id: 2,\n    col1: 'XGrid',\n    col2: 'is Awesome'\n  }, {\n    id: 3,\n    col1: 'Material-UI',\n    col2: 'is Amazing'\n  }];\n  const columns = [{\n    field: 'col1',\n    headerName: 'Column 1',\n    width: 150\n  }, {\n    field: 'col2',\n    headerName: 'Column 2',\n    width: 150\n  }];\n\n  function handleSubmit() {\n    var data = {\n      \"menteeName\": localStorage.getItem('username'),\n      \"mainTopic\": titleId,\n      \"subTopic\": \"mat\",\n      \"thoughts\": thoughts\n    };\n    console.log(\"das\");\n    console.log(data.menteeName + \" \" + data.mainTopic + \" \" + data.subTopic + \" \" + data.thoughts);\n    var auth = JSON.parse(localStorage.getItem('auth'));\n    axios.post(\"http://localhost:8080/api/mentorapplication/apply\", data, auth).then(response => {\n      console.log(\"das\");\n    });\n  }\n\n  useEffect(() => {}, []);\n  useEffect(() => {\n    if (stateOptions.find(title => title.title === titleId) === undefined) {\n      console.log(\"undefined\");\n    } else {\n      setOptions(stateOptions.find(title => title.title === titleId).subTitle.map(response => {\n        return {\n          label: response,\n          value: response\n        };\n      }));\n    } // console.log(optionsArr)\n\n  }, [titleId]); //This will run only once  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AdminTopicPanel\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AdminTopicPanel, \"xpv+IR9++NZ3nXeYsNhDYZQBFsY=\");\n\n_c = AdminTopicPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminTopicPanel\");","map":{"version":3,"sources":["/Users/alperenalkan/obss/frontend/frontend/src/components/AdminTopicPanel.js"],"names":["axios","React","useState","useEffect","DataGrid","GridRowsProp","GridColDef","AdminTopicPanel","options","label","value","selected","setSelected","initialValue","id","title","subTitle","stateOptions","setStateValues","optionsArr","setOptions","titleId","setTitle","subTitleId","setSubTitle","thoughts","setThoughts","subTArray","setSubT","rows","col1","col2","columns","field","headerName","width","handleSubmit","data","localStorage","getItem","console","log","menteeName","mainTopic","subTopic","auth","JSON","parse","post","then","response","find","undefined","map"],"mappings":"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","sourcesContent":["  import axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { DataGrid,GridRowsProp, GridColDef } from '@material-ui/data-grid';\n\nexport default function AdminTopicPanel(){\n  const options = [\n      { label: \"Grapes 🍇\", value: \"grapes\" },\n\n    ];\n    const [selected, setSelected] = useState([]);\n\n  const initialValue = [\n      { id: 0,title:\"dsa\", subTitle: \"---SELECT-OPTION----\" }];\n      const [stateOptions, setStateValues] = useState(initialValue);\n  const [optionsArr, setOptions] = useState(options);\n  const [titleId, setTitle] = useState(\"\");\n  const [subTitleId, setSubTitle] = useState([]);\n\n  const [thoughts, setThoughts] = useState(\"\")\n  const [subTArray,setSubT] = useState(initialValue);\n  const rows: GridRowsProp = [\n    { id: 1, col1: 'Hello', col2: 'World' },\n    { id: 2, col1: 'XGrid', col2: 'is Awesome' },\n    { id: 3, col1: 'Material-UI', col2: 'is Amazing' },\n  ];\n  \n  const columns: GridColDef[] = [\n    { field: 'col1', headerName: 'Column 1', width: 150 },\n    { field: 'col2', headerName: 'Column 2', width: 150 },\n  ];\n  \n function handleSubmit(){\n  var data = {\n         \"menteeName\":localStorage.getItem('username'),\n         \"mainTopic\":titleId,\n         \"subTopic\":\"mat\",\n         \"thoughts\":thoughts\n  }\n  console.log(\"das\");\n  console.log(data.menteeName + \" \" + data.mainTopic + \" \" + data.subTopic + \" \" + data.thoughts);\n  var auth = JSON.parse(localStorage.getItem('auth'));\n  axios.post(\"http://localhost:8080/api/mentorapplication/apply\",data,auth).then(response => {\n  console.log(\"das\");\n     }\n   );   \n\n}\n\n  useEffect(()  => {\n       \n    }, []);\n  useEffect(()  => {\n      if(stateOptions.find(title => title.title === titleId) === undefined)\n      {\n          console.log(\"undefined\");\n      }else{\n       setOptions(stateOptions.find(title => title.title === titleId).subTitle.map( (response) => {\n           return {label : response, value: response}}))\n           }    // console.log(optionsArr)\n              }, [titleId]); //This will run only once  \n  \n  return(\n      <div className=\"AdminTopicPanel\">\n        <DataGrid\n  rows={rows}\n  columns={columns}\n  pageSize={5}\n  checkboxSelection\n  disableSelectionOnClick\n/>\n\n            </div>\n      );\n\n\n\n}"]},"metadata":{},"sourceType":"module"}