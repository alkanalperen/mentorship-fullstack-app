{"version":3,"file":"react-multi-select-component.cjs.production.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/hooks/use-multi-select.tsx","../src/hooks/use-key.tsx","../src/lib/constants.tsx","../src/lib/fuzzy-match-utils.tsx","../src/select-panel/cross.tsx","../src/select-panel/default-item.tsx","../src/select-panel/select-item.tsx","../src/select-panel/select-list.tsx","../src/select-panel/index.tsx","../src/lib/debounce.tsx","../src/multi-select/arrow.tsx","../src/multi-select/header.tsx","../src/multi-select/loading.tsx","../src/multi-select/dropdown.tsx","../src/hooks/use-did-update-effect.tsx","../src/multi-select/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useState } from \"react\";\n\nimport { ISelectProps, Option } from \"../lib/interfaces\";\n\nconst defaultStrings = {\n  allItemsAreSelected: \"All items are selected.\",\n  clearSearch: \"Clear Search\",\n  clearSelected: \"Clear Selected\",\n  noOptions: \"No options\",\n  search: \"Search\",\n  selectAll: \"Select All\",\n  selectSomeItems: \"Select...\",\n  create: \"Create\",\n};\n\nconst defaultProps: Partial<ISelectProps> = {\n  value: [],\n  hasSelectAll: true,\n  className: \"multi-select\",\n  debounceDuration: 200,\n  options: [] as Option[],\n};\n\ninterface MultiSelectContextProps extends ISelectProps {\n  t: (key: string) => string;\n  setOptions?;\n}\n\ninterface MultiSelectProviderProps {\n  props: ISelectProps;\n  children;\n}\n\nconst MultiSelectContext = React.createContext<MultiSelectContextProps>(\n  {} as MultiSelectContextProps\n);\n\nexport const MultiSelectProvider = ({\n  props,\n  children,\n}: MultiSelectProviderProps) => {\n  const [options, setOptions] = useState(props.options);\n  const t = (key) => props.overrideStrings?.[key] || defaultStrings[key];\n\n  useEffect(() => {\n    setOptions(props.options);\n  }, [props.options]);\n\n  return (\n    <MultiSelectContext.Provider\n      value={{ t, ...defaultProps, ...props, options, setOptions }}\n    >\n      {children}\n    </MultiSelectContext.Provider>\n  );\n};\n\nexport const useMultiSelect = () => React.useContext(MultiSelectContext);\n","/*\n * copied from https://github.com/imbhargav5/rooks/blob/master/packages/shared/useKeyRef.ts\n */\n\nimport { Ref, useEffect, useCallback, useRef, useMemo } from \"react\";\n\ninterface Options {\n  /**\n   * Condition which if true, will enable the event listeners\n   */\n  when?: boolean;\n  /**\n   * Keyboardevent types to listen for. Valid options are keyDown, keyPress and keyUp\n   */\n  eventTypes?: Array<string | number>;\n  /**\n   * target ref on which the events should be listened. If no target is specified,\n   * events are listened to on the window\n   */\n  target?: Ref<HTMLElement> | null;\n}\n\nconst defaultOptions = {\n  when: true,\n  eventTypes: [\"keydown\"],\n};\n\n/**\n * useKey hook\n *\n * Fires a callback on keyboard events like keyDown, keyPress and keyUp\n *\n * @param {[string|number]} keyList\n * @param {function} callback\n * @param {Options} options\n */\nfunction useKey(\n  input: string | number | Array<string | number>,\n  callback: (e: KeyboardEvent) => any,\n  opts?: Options\n): void {\n  const keyList: Array<string | number> = useMemo(\n    () => (Array.isArray(input) ? input : [input]),\n    [input]\n  );\n  const options = Object.assign({}, defaultOptions, opts);\n  const { when, eventTypes } = options;\n  const callbackRef = useRef<(e: KeyboardEvent) => any>(callback);\n  let { target } = options;\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  const handle = useCallback(\n    (e: KeyboardEvent) => {\n      if (keyList.some((k) => e.key === k || e.code === k)) {\n        callbackRef.current(e);\n      }\n    },\n    [keyList]\n  );\n\n  useEffect((): any => {\n    if (when && typeof window !== \"undefined\") {\n      const targetNode = target ? target[\"current\"] : window;\n      eventTypes.forEach((eventType) => {\n        targetNode && targetNode.addEventListener(eventType, handle);\n      });\n      return () => {\n        eventTypes.forEach((eventType) => {\n          targetNode && targetNode.removeEventListener(eventType, handle);\n        });\n      };\n    }\n  }, [when, eventTypes, keyList, target, callback]);\n}\n\nexport { useKey };\n","export const KEY = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  SPACE: \"Space\",\n};\n","import { Option } from \"./interfaces\";\n\n/**\n * A collection of string matching algorithms built with React Select in mind.\n */\n\n// Option type from React Select and similar libraries.\ntype MapOfStrings = { [key: string]: string };\n\n/**\n * Filters React Select options and sorts by similarity to a search filter.\n * Handles partial matches, eg. searching for \"Waberg High\" will find \"Raoul\n * Wallenberg Traditional High School\". Case insensitive. Ignores\n * non-alphanumeric characters.\n *\n * @param  options  An unfiltered list of Options.\n * @param? filter  A string to compare against Option labels.\n * @param? substitutions  Strings with multiple spellings or variations that we\n *           expect to match, eg. accented characters or abbreviated words.\n *\n * @return A filtered and sorted array of Options.\n */\nexport function filterOptions(\n  options: Option[],\n  filter?: string,\n  substitutions?: MapOfStrings\n): Option[] {\n  // If the filter is blank, return the full list of Options.\n  if (!filter) {\n    return options;\n  }\n\n  const cleanFilter = cleanUpText(filter, substitutions);\n  return (\n    options\n      // Filter out undefined or null Options.\n      .filter(({ label, value }) => label != null && value != null)\n      // Create a {score, Option} pair for each Option based on its label's\n      // similarity to the filter text.\n      .map((option) => ({\n        option: option,\n        score: typeaheadSimilarity(\n          cleanUpText(option.label, substitutions),\n          cleanFilter\n        ),\n      }))\n      // Only include matches of the entire substring, with a slight\n      // affordance for transposition or extra characters.\n      .filter((pair) => pair.score >= cleanFilter.length - 2)\n      // Sort 'em by order of their score.\n      .sort((a, b) => b.score - a.score)\n      // …and grab the original Options back from their pairs.\n      .map((pair) => pair.option)\n  );\n}\n\n/**\n * Scores the similarity between two strings by returning the length of the\n * longest common subsequence. Intended for comparing strings of different\n * lengths; eg. when matching a typeahead search input with a school name.\n\n * Meant for use in an instant search box where results are being fetched\n * as a user is typing.\n *\n * @param  a  The longer string (though, we flip them if it's shorter).\n * @param  b  The shorter string, eg. a typeahead search input.\n *\n * @return The length of the longest common subsequence. Higher scores indicate\n *           closer matches.\n */\nexport function typeaheadSimilarity(a: string, b: string): number {\n  const aLength = a.length;\n  const bLength = b.length;\n  const table: any[] = [];\n\n  if (!aLength || !bLength) {\n    return 0;\n  }\n\n  // Ensure `a` isn't shorter than `b`.\n  if (aLength < bLength) {\n    [a, b] = [b, a];\n  }\n\n  // Early exit if `a` includes `b`; these will be scored higher than any\n  // other options with the same `b` (filter string), with a preference for\n  // shorter `a` strings (option labels).\n  if (a.indexOf(b) !== -1) {\n    return bLength + 1 / aLength;\n  }\n\n  // Initialize the table axes:\n  //\n  //    0 0 0 0 ... bLength\n  //    0\n  //    0\n  //\n  //   ...\n  //\n  // aLength\n  //\n  for (let x = 0; x <= aLength; ++x) {\n    table[x] = [0];\n  }\n  for (let y = 0; y <= bLength; ++y) {\n    table[0][y] = 0;\n  }\n\n  // Populate the rest of the table with a dynamic programming algorithm.\n  for (let x = 1; x <= aLength; ++x) {\n    for (let y = 1; y <= bLength; ++y) {\n      table[x][y] =\n        a[x - 1] === b[y - 1]\n          ? 1 + table[x - 1][y - 1]\n          : Math.max(table[x][y - 1], table[x - 1][y]);\n    }\n  }\n\n  return table[aLength][bLength];\n}\n\n/**\n * Apply string substitutions, remove non-alphanumeric characters, and convert\n * all letters to uppercase.\n *\n * eg. 'Scoil Bhríde Primary School' may become 'SCOILBHRIDEPRIMARYSCHOOL'.\n *\n * @param  input  An unsanitized input string.\n * @param  substitutions  Strings with multiple spellings or variations that we\n *          expect to match, for example accented characters or abbreviated\n *          words.\n *\n * @return The sanitized text.\n */\nexport function cleanUpText(\n  input?: string,\n  substitutions?: MapOfStrings\n): string {\n  if (!input) {\n    return \"\";\n  }\n\n  // Uppercase and remove all non-alphanumeric, non-accented characters.\n  // Also remove underscores.\n  input = input.toUpperCase().replace(/((?=[^\\u00E0-\\u00FC])\\W)|_/g, \"\");\n\n  if (!substitutions) {\n    return input;\n  }\n  const safeSubstitutions: MapOfStrings = substitutions; // For Flow.\n\n  // Replace all strings in `safeSubstitutions` with their standardized\n  // counterparts.\n  return Object.keys(safeSubstitutions).reduce((output, substitution) => {\n    const unsubbed = new RegExp(substitution, \"g\");\n    return output.replace(unsubbed, safeSubstitutions[substitution]);\n  }, input);\n}\n","import React from \"react\";\n\nexport const Cross = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-search-clear-icon gray\"\n  >\n    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n  </svg>\n);\n","import React from \"react\";\n\nimport { Option } from \"../lib/interfaces\";\n\ninterface IDefaultItemRendererProps {\n  checked: boolean;\n  option: Option;\n  disabled?: boolean;\n  onClick;\n}\n\nconst DefaultItemRenderer = ({\n  checked,\n  option,\n  onClick,\n  disabled,\n}: IDefaultItemRendererProps) => (\n  <div className={`item-renderer ${disabled && \"disabled\"}`}>\n    <input\n      type=\"checkbox\"\n      onChange={onClick}\n      checked={checked}\n      tabIndex={-1}\n      disabled={disabled}\n    />\n    <span>{option.label}</span>\n  </div>\n);\n\nexport default DefaultItemRenderer;\n","/**\n * This component represents an individual item in the multi-select drop-down\n */\nimport React, { useRef } from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { KEY } from \"../lib/constants\";\nimport { Option } from \"../lib/interfaces\";\nimport DefaultItemRenderer from \"./default-item\";\n\ninterface ISelectItemProps {\n  itemRenderer;\n  option: Option;\n  checked?: boolean;\n  tabIndex?: number;\n  disabled?: boolean;\n  onSelectionChanged: (checked: boolean) => void;\n  onClick;\n}\n\nconst SelectItem = ({\n  itemRenderer: ItemRenderer = DefaultItemRenderer,\n  option,\n  checked,\n  tabIndex,\n  disabled,\n  onSelectionChanged,\n  onClick,\n}: ISelectItemProps) => {\n  const itemRef: any = useRef();\n\n  const onOptionCheck = (e) => {\n    toggleChecked();\n    e.preventDefault();\n  };\n\n  const toggleChecked = () => {\n    if (!disabled) {\n      onSelectionChanged(!checked);\n    }\n  };\n\n  const handleClick = (e) => {\n    toggleChecked();\n    onClick(e);\n  };\n\n  useKey([KEY.ENTER, KEY.SPACE], onOptionCheck, { target: itemRef });\n\n  return (\n    <label\n      className={`select-item ${checked && \"selected\"}`}\n      role=\"option\"\n      aria-selected={checked}\n      tabIndex={tabIndex}\n      ref={itemRef}\n    >\n      <ItemRenderer\n        option={option}\n        checked={checked}\n        onClick={handleClick}\n        disabled={disabled}\n      />\n    </label>\n  );\n};\n\nexport default SelectItem;\n","/**\n * This component represents an unadorned list of SelectItem (s).\n */\nimport React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { Option } from \"../lib/interfaces\";\nimport SelectItem from \"./select-item\";\n\ninterface ISelectListProps {\n  options: Option[];\n  onClick: Function;\n  skipIndex: number;\n}\n\nconst SelectList = ({ options, onClick, skipIndex }: ISelectListProps) => {\n  const { disabled, value, onChange, ItemRenderer } = useMultiSelect();\n\n  const handleSelectionChanged = (option: Option, checked: boolean) => {\n    if (disabled) return;\n\n    onChange(\n      checked\n        ? [...value, option]\n        : value.filter((o: any) => o.value !== option.value)\n    );\n  };\n\n  return (\n    <>\n      {options.map((o: any, i) => {\n        const tabIndex = i + skipIndex;\n\n        return (\n          <li key={o?.key || i}>\n            <SelectItem\n              tabIndex={tabIndex}\n              option={o}\n              onSelectionChanged={(c) => handleSelectionChanged(o, c)}\n              checked={!!value.find((s) => s.value === o.value)}\n              onClick={(e) => onClick(e, tabIndex)}\n              itemRenderer={ItemRenderer}\n              disabled={o.disabled || disabled}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SelectList;\n","/**\n * This component represents the entire panel which gets dropped down when the\n * user selects the component.  It encapsulates the search filter, the\n * Select-all item, and the list of options.\n */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport { debounce } from \"../lib/debounce\";\nimport { filterOptions } from \"../lib/fuzzy-match-utils\";\nimport { Cross } from \"./cross\";\nimport SelectItem from \"./select-item\";\nimport SelectList from \"./select-list\";\n\nenum FocusType {\n  SEARCH = 0,\n  NONE = -1,\n}\n\nconst SelectPanel = () => {\n  const {\n    t,\n    onChange,\n    options,\n    setOptions,\n    value,\n    filterOptions: customFilterOptions,\n    selectAllLabel,\n    ItemRenderer,\n    disabled,\n    disableSearch,\n    hasSelectAll,\n    ClearIcon,\n    debounceDuration,\n    isCreatable,\n    onCreateOption,\n  } = useMultiSelect();\n\n  const listRef = useRef<any>();\n  const searchInputRef = useRef<any>();\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState(options);\n  const [searchTextForFilter, setSearchTextForFilter] = useState(\"\");\n  const [focusIndex, setFocusIndex] = useState(0);\n  const debouncedSearch = useCallback(\n    debounce((query) => setSearchTextForFilter(query), debounceDuration),\n    []\n  );\n\n  const skipIndex = useMemo(() => {\n    let start = 0;\n\n    if (!disableSearch) start += 1; // if search is enabled then +1 to skipIndex\n    if (hasSelectAll) start += 1; // if select-all is enabled then +1 to skipIndex\n\n    return start;\n  }, [disableSearch, hasSelectAll]);\n\n  const selectAllOption = {\n    label: selectAllLabel || t(\"selectAll\"),\n    value: \"\",\n  };\n\n  const selectAllValues = (checked) => {\n    const filteredValues = filteredOptions\n      .filter((o) => !o.disabled)\n      .map((o) => o.value);\n\n    if (checked) {\n      const selectedValues = value.map((o) => o.value);\n      const finalSelectedValues = [...selectedValues, ...filteredValues];\n\n      return filteredOptions.filter((o) =>\n        finalSelectedValues.includes(o.value)\n      );\n    }\n\n    return value.filter((o) => !filteredValues.includes(o.value));\n  };\n\n  const selectAllChanged = (checked: boolean) => {\n    const newOptions = selectAllValues(checked);\n    onChange(newOptions);\n  };\n\n  const handleSearchChange = (e) => {\n    debouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleClear = () => {\n    setSearchTextForFilter(\"\");\n    setSearchText(\"\");\n    searchInputRef?.current?.focus();\n  };\n\n  const handleItemClicked = (index: number) => setFocusIndex(index);\n\n  // Arrow Key Navigation\n  const handleKeyDown = (e) => {\n    switch (e.code) {\n      case KEY.ARROW_UP:\n        updateFocus(-1);\n        break;\n      case KEY.ARROW_DOWN:\n        updateFocus(1);\n        break;\n      default:\n        return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  useKey([KEY.ARROW_DOWN, KEY.ARROW_UP], handleKeyDown, {\n    target: listRef,\n  });\n\n  const handleSearchFocus = () => {\n    setFocusIndex(FocusType.SEARCH);\n  };\n\n  const handleOnCreateOption = async () => {\n    let newOption = { label: searchText, value: searchText, __isNew__: true };\n\n    // if custom `onCreateOption` is given then this will call this\n    if (onCreateOption) {\n      newOption = await onCreateOption(searchText);\n    }\n\n    // adds created value to existing options\n    setOptions([newOption, ...options]);\n    handleClear();\n\n    onChange([...value, newOption]);\n  };\n\n  const getFilteredOptions = async () =>\n    customFilterOptions\n      ? await customFilterOptions(options, searchTextForFilter)\n      : filterOptions(options, searchTextForFilter);\n\n  const updateFocus = (offset: number) => {\n    let newFocus = focusIndex + offset;\n    newFocus = Math.max(0, newFocus);\n    newFocus = Math.min(newFocus, options.length + Math.max(skipIndex - 1, 0));\n    setFocusIndex(newFocus);\n  };\n\n  useEffect(() => {\n    listRef?.current?.querySelector(`[tabIndex='${focusIndex}']`)?.focus();\n  }, [focusIndex]);\n\n  const [isAllOptionSelected, hasSelectableOptions] = useMemo(() => {\n    const filteredOptionsList = filteredOptions.filter((o) => !o.disabled);\n    return [\n      filteredOptionsList.every(\n        (o) => value.findIndex((v) => v.value === o.value) !== -1\n      ),\n      filteredOptionsList.length !== 0,\n    ];\n    // eslint-disable-next-line\n  }, [filteredOptions, value]);\n\n  useEffect(() => {\n    getFilteredOptions().then(setFilteredOptions);\n  }, [searchTextForFilter, options]);\n\n  return (\n    <div className=\"select-panel\" role=\"listbox\" ref={listRef}>\n      {!disableSearch && (\n        <div className=\"search\">\n          <input\n            placeholder={t(\"search\")}\n            type=\"text\"\n            aria-describedby={t(\"search\")}\n            onChange={handleSearchChange}\n            onFocus={handleSearchFocus}\n            value={searchText}\n            ref={searchInputRef}\n            tabIndex={0}\n          />\n          <button\n            type=\"button\"\n            className=\"search-clear-button\"\n            hidden={!searchText}\n            onClick={handleClear}\n            aria-label={t(\"clearSearch\")}\n          >\n            {ClearIcon || <Cross />}\n          </button>\n        </div>\n      )}\n\n      <ul className=\"options\">\n        {hasSelectAll && hasSelectableOptions && (\n          <SelectItem\n            tabIndex={skipIndex === 1 ? 0 : 1}\n            checked={isAllOptionSelected}\n            option={selectAllOption}\n            onSelectionChanged={selectAllChanged}\n            onClick={() => handleItemClicked(1)}\n            itemRenderer={ItemRenderer}\n            disabled={disabled}\n          />\n        )}\n\n        {filteredOptions.length ? (\n          <SelectList\n            skipIndex={skipIndex}\n            options={filteredOptions}\n            onClick={(_e, index) => handleItemClicked(index)}\n          />\n        ) : isCreatable ? (\n          <li onClick={handleOnCreateOption} className=\"select-item creatable\">\n            {t(\"create\")} \"{searchText}\"\n          </li>\n        ) : (\n          <li className=\"no-options\">{t(\"noOptions\")}</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default SelectPanel;\n","export const debounce = (func, wait) => {\n  let timeout;\n  return function (...args) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      func.apply(null, args);\n    }, wait);\n  };\n};\n","import React from \"react\";\n\nexport const Arrow = ({ expanded }) => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    className=\"dropdown-heading-dropdown-arrow gray\"\n  >\n    <path d={expanded ? \"M18 15 12 9 6 15\" : \"M6 9L12 15 18 9\"} />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\n\nexport const DropdownHeader = () => {\n  const { t, value, options, valueRenderer } = useMultiSelect();\n\n  const noneSelected = value.length === 0;\n  const allSelected = value.length === options.length;\n  const customText = valueRenderer && valueRenderer(value, options);\n\n  const getSelectedText = () => value.map((s) => s.label).join(\", \");\n\n  return noneSelected ? (\n    <span className=\"gray\">{customText || t(\"selectSomeItems\")}</span>\n  ) : (\n    <span>\n      {customText ||\n        (allSelected ? t(\"allItemsAreSelected\") : getSelectedText())}\n    </span>\n  );\n};\n","import React from \"react\";\n\nexport const Loading = ({ size = 24 }) => (\n  <span\n    style={{\n      width: size,\n      marginRight: \"0.2rem\",\n    }}\n  >\n    <svg\n      width={size}\n      height={size}\n      className=\"spinner\"\n      viewBox=\"0 0 50 50\"\n      style={{ display: \"inline\", verticalAlign: \"middle\" }}\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" className=\"path\"></circle>\n    </svg>\n  </span>\n);\n","/**\n * A generic dropdown component.  It takes the children of the component\n * and hosts it in the component.  When the component is selected, it\n * drops-down the contentComponent and applies the contentProps.\n */\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { useDidUpdateEffect } from \"../hooks/use-did-update-effect\";\nimport { useKey } from \"../hooks/use-key\";\nimport { useMultiSelect } from \"../hooks/use-multi-select\";\nimport { KEY } from \"../lib/constants\";\nimport SelectPanel from \"../select-panel\";\nimport { Cross } from \"../select-panel/cross\";\nimport { Arrow } from \"./arrow\";\nimport { DropdownHeader } from \"./header\";\nimport { Loading } from \"./loading\";\n\nconst Dropdown = () => {\n  const {\n    t,\n    onMenuToggle,\n    ArrowRenderer,\n    shouldToggleOnHover,\n    isLoading,\n    disabled,\n    onChange,\n    labelledBy,\n    value,\n    isOpen,\n    defaultIsOpen,\n    ClearSelectedIcon,\n  } = useMultiSelect();\n\n  const [isInternalExpand, setIsInternalExpand] = useState(true);\n  const [expanded, setExpanded] = useState(defaultIsOpen);\n  const [hasFocus, setHasFocus] = useState(false);\n  const FinalArrow = ArrowRenderer || Arrow;\n\n  const wrapper: any = useRef();\n\n  useDidUpdateEffect(() => {\n    onMenuToggle && onMenuToggle(expanded);\n  }, [expanded]);\n\n  useEffect(() => {\n    if (defaultIsOpen === undefined && typeof isOpen === \"boolean\") {\n      setIsInternalExpand(false);\n      setExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleKeyDown = (e) => {\n    // allows space and enter when focused on input/button\n    if (\n      [\"text\", \"button\"].includes(e.target.type) &&\n      [KEY.SPACE, KEY.ENTER].includes(e.code)\n    ) {\n      return;\n    }\n\n    if (isInternalExpand) {\n      if (e.code === KEY.ESCAPE) {\n        setExpanded(false);\n        wrapper?.current?.focus();\n      } else {\n        setExpanded(true);\n      }\n    }\n    e.preventDefault();\n  };\n\n  useKey([KEY.ENTER, KEY.ARROW_DOWN, KEY.SPACE, KEY.ESCAPE], handleKeyDown, {\n    target: wrapper,\n  });\n\n  const handleHover = (iexpanded: boolean) => {\n    isInternalExpand && shouldToggleOnHover && setExpanded(iexpanded);\n  };\n\n  const handleFocus = () => !hasFocus && setHasFocus(true);\n\n  const handleBlur = (e) => {\n    if (!e.currentTarget.contains(e.relatedTarget) && isInternalExpand) {\n      setHasFocus(false);\n      setExpanded(false);\n    }\n  };\n\n  const handleMouseEnter = () => handleHover(true);\n\n  const handleMouseLeave = () => handleHover(false);\n\n  const toggleExpanded = () => {\n    isInternalExpand && setExpanded(isLoading || disabled ? false : !expanded);\n  };\n\n  const handleClearSelected = (e) => {\n    e.stopPropagation();\n    onChange([]);\n    isInternalExpand && setExpanded(false);\n  };\n\n  return (\n    <div\n      tabIndex={0}\n      className=\"dropdown-container\"\n      aria-labelledby={labelledBy}\n      aria-expanded={expanded}\n      aria-readonly={true}\n      aria-disabled={disabled}\n      ref={wrapper}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"dropdown-heading\" onClick={toggleExpanded}>\n        <div className=\"dropdown-heading-value\">\n          <DropdownHeader />\n        </div>\n        {isLoading && <Loading />}\n        {value.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"clear-selected-button\"\n            onClick={handleClearSelected}\n            disabled={disabled}\n            aria-label={t(\"clearSelected\")}\n          >\n            {ClearSelectedIcon || <Cross />}\n          </button>\n        )}\n        <FinalArrow expanded={expanded} />\n      </div>\n      {expanded && (\n        <div className=\"dropdown-content\">\n          <div className=\"panel-content\">\n            <SelectPanel />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect, useRef } from \"react\";\n\n/**\n * similar to `useEffect` but gets triggered only when value changes\n * @param fn executable function on dependency updates\n * @param inputs dependency array\n */\nexport function useDidUpdateEffect(fn, inputs) {\n  const didMountRef = useRef(false);\n\n  useEffect(() => {\n    if (didMountRef.current) fn();\n    else didMountRef.current = true;\n  }, inputs);\n}\n","import \"../style.css\";\n\nimport React from \"react\";\n\nimport { MultiSelectProvider } from \"../hooks/use-multi-select\";\nimport { ISelectProps } from \"../lib/interfaces\";\nimport Dropdown from \"./dropdown\";\n\nconst MultiSelect = (props: ISelectProps) => (\n  <MultiSelectProvider props={props}>\n    <div className={`rmsc ${props.className || \"multi-select\"}`}>\n      <Dropdown />\n    </div>\n  </MultiSelectProvider>\n);\n\nexport default MultiSelect;\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defaultStrings","allItemsAreSelected","clearSearch","clearSelected","noOptions","search","selectAll","selectSomeItems","create","defaultProps","value","hasSelectAll","className","debounceDuration","options","MultiSelectContext","React","createContext","MultiSelectProvider","props","children","setOptions","useState","useEffect","Provider","t","key","overrideStrings","useMultiSelect","useContext","defaultOptions","when","eventTypes","useKey","input","callback","opts","keyList","useMemo","Array","isArray","Object","assign","callbackRef","useRef","target","current","handle","useCallback","e","some","k","code","window","targetNode","forEach","eventType","addEventListener","removeEventListener","KEY","ARROW_DOWN","ARROW_UP","ENTER","ESCAPE","SPACE","typeaheadSimilarity","a","b","aLength","length","bLength","table","indexOf","x","y","Math","max","cleanUpText","substitutions","toUpperCase","replace","safeSubstitutions","keys","reduce","output","substitution","unsubbed","RegExp","Cross","width","height","fill","stroke","strokeWidth","x1","y1","x2","y2","DefaultItemRenderer","checked","option","onClick","disabled","onChange","tabIndex","label","SelectItem","itemRenderer","ItemRenderer","onSelectionChanged","itemRef","toggleChecked","preventDefault","role","SelectList","skipIndex","map","o","i","c","handleSelectionChanged","filter","find","s","FocusType","SelectPanel","filterOptions","customFilterOptions","selectAllLabel","disableSearch","ClearIcon","isCreatable","onCreateOption","listRef","searchInputRef","searchText","setSearchText","filteredOptions","setFilteredOptions","searchTextForFilter","setSearchTextForFilter","focusIndex","setFocusIndex","debouncedSearch","func","wait","timeout","args","clearTimeout","setTimeout","apply","debounce","query","start","selectAllOption","handleClear","focus","handleItemClicked","index","updateFocus","stopPropagation","offset","newFocus","min","querySelector","isAllOptionSelected","hasSelectableOptions","filteredOptionsList","every","findIndex","v","async","cleanFilter","score","pair","sort","getFilteredOptions","then","placeholder","SEARCH","onFocus","hidden","newOptions","filteredValues","finalSelectedValues","includes","selectAllValues","_e","newOption","__isNew__","Arrow","expanded","d","DropdownHeader","valueRenderer","noneSelected","allSelected","customText","join","Loading","size","marginRight","viewBox","display","verticalAlign","cx","cy","r","Dropdown","onMenuToggle","ArrowRenderer","shouldToggleOnHover","isLoading","labelledBy","isOpen","defaultIsOpen","ClearSelectedIcon","isInternalExpand","setIsInternalExpand","setExpanded","hasFocus","setHasFocus","FinalArrow","wrapper","fn","inputs","didMountRef","useDidUpdateEffect","undefined","handleHover","iexpanded","onBlur","currentTarget","contains","relatedTarget","onMouseEnter","onMouseLeave"],"mappings":"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"}